{"version":3,"sources":["webpack:///./src/components/post-list.js","webpack:///./src/templates/index.js"],"names":["PostList","posts","className","map","node","id","autoExcerpt","excerpt","fields","frontmatter","title","date","author","coverImage","tags","summary","key","path","slug","featureImageSrc","propTypes","PropTypes","object","Index","data","pageContext","nextPagePath","previousPagePath","allMarkdownRemark","edges","previousPath","previousLabel","nextPath","nextLabel","isRequired","shape","string","postsQuery"],"mappings":"2FAAA,4FAIe,SAASA,EAAT,GAA8B,IAAVC,EAAS,EAATA,MACjC,OACE,yBAAKC,UAAU,aACZD,EAAME,KAAI,YAAe,IAAZC,EAAW,EAAXA,KAEVC,EAWED,EAXFC,GACSC,EAUPF,EAVFG,QACAC,EASEJ,EATFI,OAJqB,EAanBJ,EARFK,YACEC,EANmB,EAMnBA,MACAC,EAPmB,EAOnBA,KACAC,EARmB,EAQnBA,OACAC,EATmB,EASnBA,WACAC,EAVmB,EAUnBA,KACAC,EAXmB,EAWnBA,QAIJ,OACE,kBAAC,IAAD,CACEC,IAAKX,EACLK,MAAOA,EACPC,KAAMA,EACNM,KAAMT,EAAOU,KACbN,OAAQA,EACRC,WAAYA,EACZM,gBAAiBX,EAAOW,gBACxBL,KAAMA,EACNP,QAAUQ,GAAWT,QAQjCN,EAASoB,UAAY,CACnBnB,MAAOoB,IAAUC,S,kCCzCnB,gJAQMC,EAAQ,SAAC,GAA+D,IAA7DC,EAA4D,EAA5DA,KAA4D,IAAtDC,YAAeC,EAAuC,EAAvCA,aAAcC,EAAyB,EAAzBA,iBAEpB1B,EAC1BuB,EADFI,kBAAqBC,MAGvB,OACE,oCACE,kBAAC,IAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAU5B,MAAOA,IACjB,kBAAC,IAAD,CACE6B,aAAcH,EACdI,cAAc,cACdC,SAAUN,EACVO,UAAU,mBAOpBV,EAAMH,UAAY,CAChBI,KAAMH,IAAUC,OAAOY,WACvBT,YAAaJ,IAAUc,MAAM,CAC3BT,aAAcL,IAAUe,OACxBT,iBAAkBN,IAAUe,UAIzB,IAAMC,EAAU,aAmCRd","file":"component---src-templates-index-js-7a8e56b386614684fac8.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport Post from '../components/post'\n\nexport default function PostList({ posts }) {\n  return (\n    <div className=\"post-list\">\n      {posts.map(({ node }) => {\n        const {\n          id,\n          excerpt: autoExcerpt,\n          fields,\n          frontmatter: {\n            title,\n            date,\n            author,\n            coverImage,\n            tags,\n            summary,\n          },\n        } = node\n\n        return (\n          <Post\n            key={id}\n            title={title}\n            date={date}\n            path={fields.slug}\n            author={author}\n            coverImage={coverImage}\n            featureImageSrc={fields.featureImageSrc}\n            tags={tags}\n            excerpt={ summary || autoExcerpt}\n          />\n        )\n      })}\n    </div>\n  )\n}\n\nPostList.propTypes = {\n  posts: PropTypes.object,\n}","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\nimport SEO from '../components/seo'\nimport Layout from '../components/layout'\nimport Navigation from '../components/navigation'\nimport PostList from '../components/post-list'\n\nconst Index = ({ data, pageContext: { nextPagePath, previousPagePath } }) => {\n  const {\n    allMarkdownRemark: { edges: posts },\n  } = data\n\n  return (\n    <>\n      <SEO />\n      <Layout>\n        <PostList posts={posts}></PostList>\n        <Navigation\n          previousPath={previousPagePath}\n          previousLabel=\"Newer posts\"\n          nextPath={nextPagePath}\n          nextLabel=\"Older posts\"\n        />\n      </Layout>\n    </>\n  )\n}\n\nIndex.propTypes = {\n  data: PropTypes.object.isRequired,\n  pageContext: PropTypes.shape({\n    nextPagePath: PropTypes.string,\n    previousPagePath: PropTypes.string,\n  }),\n}\n\nexport const postsQuery = graphql`\n  query($limit: Int!, $skip: Int!) {\n    allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"//posts//\" }, frontmatter: { published: { ne: false } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          id\n          excerpt\n          fields {\n            slug\n            featureImageSrc\n          }\n          frontmatter {\n            title\n            date(formatString: \"YYYY-MM-DD\")\n            author\n            tags\n            coverImage {\n              childImageSharp {\n                fluid(maxWidth: 800) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default Index\n"],"sourceRoot":""}