{"componentChunkName":"component---src-templates-page-js","path":"/2020-03-16-A-Glimpse-Of-Web-Audio-API/","result":{"data":{"site":{"siteMetadata":{"title":"HP goes FE","author":"@hikerpig"}},"markdownRemark":{"id":"10e13c7c-8753-5665-9050-9f2c4b2b3750","html":"<p>Web Audio 提供了一个基于图的音频处理构建体系，这个系统里的单元为各种音频节点（AudioNode），可模块化连接（modular routing）。这个体系被业界广泛认同多年，有很多成熟的应用和系统，例如 Apple <a href=\"https://developer.apple.com/documentation/coreaudio\">CoreAudio</a>，而这个设计理念再往上还能追溯到 1964 年的 <a href=\"https://www.wikiwand.com/en/Moog_synthesizer\">Moog</a> 合成器。</p>\n<p><img src=\"https://i.loli.net/2020/03/17/KnWXYecoivIxS7r.jpg\" alt=\"A 1975 Moog Modular 55 system\"></p>\n<p>如果从 <a href=\"https://webaudio.github.io/web-audio-api\">Web Audio 规范文档</a> 初入这个领域，可能理解起来有点费力，毕竟文档给出了参数和实现细节，却并不解释这些命名的逻辑。</p>\n<p>看看这张遍布着黑话的模块图：</p>\n<p><img src=\"https://i.loli.net/2020/03/17/nX3TarNg6IMwUYe.jpg\" alt=\"一个音频处理系统图\"></p>\n<p>对一些基础概念的解释，MDN 的文档<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Web_Audio_API/Basic_concepts_behind_Web_Audio_API\">《网页音频接口的基本概念》</a>做得很好。</p>\n<p>不过 MDN 的文档里对一些领域知识和行内术语的解释也不太详尽，以下是我碰到的几个初感迷惑，调查背景以后才理解了的概念。</p>\n<h2 id=\"效果节点\" style=\"position:relative;\"><a href=\"#%E6%95%88%E6%9E%9C%E8%8A%82%E7%82%B9\" aria-label=\"效果节点 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>效果节点</h2>\n<h3 id=\"gainnode\" style=\"position:relative;\"><a href=\"#gainnode\" aria-label=\"gainnode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GainNode</h3>\n<p>这是我第一个遇见的效果节点，需要改变音量的时候会用到，那么为什么不叫做 VolumeNode 呢？私以为，音量是一个比较主观和复杂的概念。而音频处理，基本上可以看做一个信号处理过程，无论是早年的模拟信号（电流、电压），还是现在的数字信号，关注点都在于信号本身。</p>\n<p>Gain 一般翻译为增益，是电子学的术语，单独拎出来说没有意义，要细说的话有电压增益、电流增益、功率增益等。</p>\n<h3 id=\"pannernode\" style=\"position:relative;\"><a href=\"#pannernode\" aria-label=\"pannernode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>PannerNode</h3>\n<p>又一个看到名字不知道是做什么的东西， pan 的翻译是“平底锅”，和声音又有什么关系呢？ 在<a href=\"https://www.wikiwand.com/en/Panning_(audio)\">维基百科里关于 Panning 的解释</a>里提到：</p>\n<blockquote>\n<p>声音处理中的 Panning 借用了摄像中的“摇拍”概念。</p>\n</blockquote>\n<p><img src=\"https://upload.wikimedia.org/wikipedia/commons/9/9c/Pan1.gif\" alt=\"摄影中的摇拍\"></p>\n<p>简单来说就是通过更改多个声道的相对强度，来营造出一种音源在移动的感觉。同时这个移动的感觉能够营造出空间感，所以在规范里这个技术与”空间化“（Spatialization）也放在一起讨论。</p>\n<h3 id=\"biquadfilternode\" style=\"position:relative;\"><a href=\"#biquadfilternode\" aria-label=\"biquadfilternode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>BiquadFilterNode</h3>\n<p>双二阶滤波器（Biquad Filter）在电子学里很常用。按照百度百科的说法：</p>\n<blockquote>\n<p>双二阶滤波器是传递函数的分子、分母都是二阶多项式的滤波器。</p>\n</blockquote>\n<p>直观地从使用角度来理解，这个滤波器在两个不同的频段可以有不同的响应模型，所以通过合理配置参数，可以增强或者削减某些频段的强度，实现低通（lowpass）、高通（highpass）、带通（bandpass）等效果。详细响应曲线可以参考以下这个例子，来自<a href=\"https://webaudioapi.com/samples/frequency-response/\">webaudioapi.com</a>。</p>\n<iframe src=\"https://webaudioapi.com/samples/frequency-response/\" height=\"600\" class=\"iframe--resize-v\"></iframe>\n<!--以下是一个低通滤镜的响应曲线：\n\n![low pass filter](https://i.loli.net/2020/03/17/jyV8N5axb1HUuA3.jpg)-->\n<h3 id=\"convolvernode\" style=\"position:relative;\"><a href=\"#convolvernode\" aria-label=\"convolvernode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ConvolverNode</h3>\n<p><a href=\"https://webaudio.github.io/web-audio-api/#ConvolverNode\">规范中的 ConvolverNode 定义</a>：</p>\n<blockquote>\n<p>The ConvolverNode interface is an AudioNode that performs a Linear Convolution on a given AudioBuffer, often used to achieve a reverb effect</p>\n</blockquote>\n<p>对信号源和提供给卷积器的冲激响应（impulse response，以 AudioBuffer 的形式提供给卷积器，作为卷积核）做卷积，信号源和卷积核都是离散和线性的。一般可用于制造混响（reverb，或称回响）效果。</p>\n<p>首先说到<a href=\"https://www.wikiwand.com/zh-hans/%E5%86%B2%E6%BF%80%E5%93%8D%E5%BA%94\">冲激响应</a>，指的是一个系统随着时间，对于单位输入信号（即一个脉冲）的响应。</p>\n<p>以下的冲激响应来自 <a href=\"https://webaudioapi.com/samples/room-effects/\">webaudioapi room-effects 例子</a> 里的 telephone 效果。对于每一个脉冲来说，在发生的 0.0006 秒左右后开始有响应，大概 0.0025 秒之后趋于平静。在音效处理中，一般会将未经处理的声音（称作“干”声音，对应于题图中的 dry）与经过处理过的声音（称作“湿”声音，对应于 wet）按照一定比例混合，那么在电话的这个例子中，就能听到稍微有一点延后的效果。假如这个延后的时间内更长，就有大的房间里回音的效果。</p>\n<p><img src=\"https://i.loli.net/2020/03/18/CsUke2BOMqRPbQt.jpg\" alt=\"电话效果\"></p>\n<p>blink 的源码中有一段关于 <a href=\"https://github.com/chromium/chromium/blob/master/third_party/blink/renderer/modules/webaudio/docs/convolver_reverb.md\">convolver_reverb 的文档</a>，叙述了实现卷积混响时减少计算量的一些技巧。</p>\n<p>一般来说，冲激响应曲线由音效设计师录制或是制作，可以导出成 <code>.wav</code> 文件等。</p>","excerpt":"Web Audio 提供了一个基于图的音频处理构建体系，这个系统里的单元为各种音频节点（AudioNode），可模块化连接（modular routing）。这个体系被业界广泛认同多年，有很多成熟的应用和系统，例如 Apple CoreAudio…","tableOfContents":"<ul>\n<li>\n<p><a href=\"/2020-03-16-A-Glimpse-Of-Web-Audio-API/#%E6%95%88%E6%9E%9C%E8%8A%82%E7%82%B9\">效果节点</a></p>\n<ul>\n<li><a href=\"/2020-03-16-A-Glimpse-Of-Web-Audio-API/#gainnode\">GainNode</a></li>\n<li><a href=\"/2020-03-16-A-Glimpse-Of-Web-Audio-API/#pannernode\">PannerNode</a></li>\n<li><a href=\"/2020-03-16-A-Glimpse-Of-Web-Audio-API/#biquadfilternode\">BiquadFilterNode</a></li>\n<li><a href=\"/2020-03-16-A-Glimpse-Of-Web-Audio-API/#convolvernode\">ConvolverNode</a></li>\n</ul>\n</li>\n</ul>","fields":{"slug":"/2020-03-16-A-Glimpse-Of-Web-Audio-API/","featureImageSrc":"https://i.loli.net/2020/03/17/nX3TarNg6IMwUYe.jpg"},"frontmatter":{"title":"初识 Web Audio API - 术语扫盲","date":"2020-03-16","author":null,"tags":["audio","Avtech"],"use_toc":true,"coverImage":null}}},"pageContext":{"type":"posts","next":{"fields":{"slug":"/2020-03-07-Vuex-Webpack-HMR/"},"frontmatter":{"title":"一次 Webpack 下的 Vuex HMR 尝试","tags":["Engineering","Webpack","Vuex"]},"fileAbsolutePath":"/Users/bytedance/mydemos/gatsby-hello-friend/content/posts/2020-03-07-Vuex-Webpack-HMR.md"},"previous":{"fields":{"slug":"/2020-06-05-Separate-Git-Config-By-Directories/"},"frontmatter":{"title":"工作和个人项目使用不同 gitconfig","tags":["tip","git"]},"fileAbsolutePath":"/Users/bytedance/mydemos/gatsby-hello-friend/content/posts/2020-06-05-Separate-Git-Config-By-Directories.md"},"slug":"/2020-03-16-A-Glimpse-Of-Web-Audio-API/"}},"staticQueryHashes":["1425477374","3128451518"]}