{"componentChunkName":"component---src-templates-index-js","path":"/3","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"85e4cc68-cee6-512d-9015-445d1cdde40f","excerpt":"CSS 中两种实现阴影的方式 text-shadow 和 box-shadow filter: drop-shadow 前者的 blur-radius 指的是阴影的最外延半径，后者的 blur-radius 指的是高斯模糊中的标准差($σ) W3C 的 CSS…","fields":{"slug":"/2018-12-22-svg-blur-and-css-text-shadow/","featureImageSrc":"//images-hikerpig.oss-cn-beijing.aliyuncs.com/image/compare-shadow-blur.jpg"},"frontmatter":{"title":"CSS 中的两种模糊半径","date":"2018-12-22","author":null,"tags":["SVG","CSS"],"coverImage":null}}},{"node":{"id":"ed6269c7-a640-5407-b497-586db0474518","excerpt":"题图来自 http://iamvdo.me/en/blog/css-font-metrics-line-height-and-vertical-align 为什么同样的 font-size ，文字高度不一样？ 每个字体在设计的时候，都是基于一个 EM Square…","fields":{"slug":"/2018-11-15-font-metrics-in-browser/","featureImageSrc":"https://iamvdo.me/content/01-blog/30-css-avance-metriques-des-fontes-line-height-et-vertical-align/upm-px-equivalent.png"},"frontmatter":{"title":"浏览器中的字体信息测量","date":"2018-11-15","author":null,"tags":["浏览器","字体"],"coverImage":null}}},{"node":{"id":"1f16a74e-72dd-5102-bd32-d40615b8dbfe","excerpt":"不要使用 transform-origin 属性 SVG 支持 transform，而且写法似乎与 CSS 中相同，但是它的标准里并不支持 transform-origin 属性。虽然在部分浏览器中，给 SVG 元素指定 transform-origin…","fields":{"slug":"/2018-08-26-beware-of-svg-transform/","featureImageSrc":null},"frontmatter":{"title":"SVG 元素的自定义  transform origin","date":"2018-08-26","author":null,"tags":["SVG"],"coverImage":null}}},{"node":{"id":"fd04a49f-d97f-5111-8fbf-e7eeb0de0c7a","excerpt":"从《Life is strange》的原声带中发现的瑰宝，来自澳大利亚的兄妹组合 Angus & Julia Stone 的一首略显忧伤的曲子，他俩前几年的曲风，小清新中带着些许迷幻。妹妹声音空灵慵懒，像加州的海风，棕榈叶间斑驳的阳光，和歌词特别配。 原曲使用 Open D…","fields":{"slug":"/2018-07-31-Goodbye My Santa Monica Dream/","featureImageSrc":null},"frontmatter":{"title":"Goodbye My Santa Monica Dream 🎵","date":"2018-07-31","author":null,"tags":["吉他","音乐"],"coverImage":null}}},{"node":{"id":"e384de2c-ffdb-50cd-99ba-6e659880b0d3","excerpt":"前言 构建大型 SPA 应用时，代码分割和懒加载是比较常用的优化手段，在 Vue 生态下，使用 vue-router 很容易实现组件的懒加载。 但应用里除了组件，还有庞大的业务逻辑，这部分如何分割和懒加载比较合适呢？ 使用 Vuex…","fields":{"slug":"/2018-07-03-Vuex-Dynamic-Module-Hints/","featureImageSrc":null},"frontmatter":{"title":"Vuex 模块动态注册的一些实践经验","date":"2018-07-03","author":null,"tags":["Vue","Vuex"],"coverImage":null}}},{"node":{"id":"6b5e4b0d-6ad0-5a17-9108-a3484f141fd6","excerpt":"在公司项目里的一个小角落，尝试使用 Rust + WebAssembly 加速应用里部分计算 选择 首先要分清项目里 WebAssembly 的定位 应用主体：完成绝大多数逻辑，JS 只作为加载入口和少部分事件绑定桥梁 工具库：分担一些复杂和耗时的计算，由 JS…","fields":{"slug":"/2018-05-03-Try-Rust-Webassemly/","featureImageSrc":null},"frontmatter":{"title":"Try Rust WebAssembly","date":"2018-05-03","author":null,"tags":["WebAssembly","Rust"],"coverImage":null}}},{"node":{"id":"a5683dcc-2168-50d7-8ee6-95f426b9a2cf","excerpt":"为一个基于 Vue 的项目搭建测试框架，有两个比较成熟的选择，Mocha + Webpack + Karma，或是 Jest。 前者也是 vue-cli 默认脚手架里的测试方案，我们之前的项目也用了它，实际使用起来，感觉成也 Karma，败也 Karma…","fields":{"slug":"/2018-04-06-Write-Vue-Tests-in-Jest/","featureImageSrc":null},"frontmatter":{"title":"用 Jest 单元测试基于 Vue 的项目","date":"2018-04-06","author":null,"tags":["Test","Vue"],"coverImage":null}}},{"node":{"id":"78fef76f-2109-5c87-8693-25314d8e78d9","excerpt":"通过 Typescript class 继承 Error 实现自定义错误类型并编译到 ES5 时，遇到了一个坑。 compilerOptions.target 设为 \"es5\"。 但是运行起来： 原因 使用 Babel/Typescript…","fields":{"slug":"/2018-04-02-Customize-Error-in-Typescript/","featureImageSrc":null},"frontmatter":{"title":"在 Typescript 中继承 Error 对象","date":"2018-04-02","author":null,"tags":["Typescript","Javascript"],"coverImage":null}}},{"node":{"id":"d34af4f9-fe3d-5504-aa37-e4fb9d9786ec","excerpt":"转到用 Typescript 写 Vue 应用以后，经过一轮工具链和依赖的洗礼，总算蹒跚地能走起来了，不过有一个很常用的功能 mixin，似乎还没有官方的解决方案。 既想享受 mixin 的灵活和方便，又想收获 ts 的类型系统带来的安全保障和开发时使用 IntelliSense…","fields":{"slug":"/2018-01-21-typed-vue-mixins/","featureImageSrc":null},"frontmatter":{"title":"在 Typescript 中使用可被复用的 Vue Mixin","date":"2018-01-21","author":null,"tags":["Typescript","Vue"],"coverImage":null}}},{"node":{"id":"626f8ab3-6a1c-514f-b2b7-160e559e6681","excerpt":"写 ES6+ 一定逃不开 babel，也避不开调试 babel 生成的一些代码。 当输入一段 ES6 Class 代码时: 问题 在开发常用的浏览器 Chrome 和 Firefox 里正常工作，但是在 IE10 下会报错 Uncaught TypeError…","fields":{"slug":"/2017-09-25-ES6+Babel-little-bug-under-IE11/","featureImageSrc":null},"frontmatter":{"title":"ES6 Class 和 Babel 6 在 IE 10 及以下时候的一个坑","date":"2017-09-25","author":null,"tags":["Javascript","Babel"],"coverImage":null}}}]}},"pageContext":{"pageNumber":2,"humanPageNumber":3,"skip":20,"limit":10,"numberOfPages":6,"previousPagePath":"/2","nextPagePath":"/4"}},"staticQueryHashes":["1425477374","3128451518"]}