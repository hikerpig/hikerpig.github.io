{"componentChunkName":"component---src-templates-page-js","path":"/2018-07-03-Vuex-Dynamic-Module-Hints/","result":{"data":{"site":{"siteMetadata":{"title":"HP goes FE","author":"@hikerpig"}},"markdownRemark":{"id":"e384de2c-ffdb-50cd-99ba-6e659880b0d3","html":"<h1 id=\"前言\" style=\"position:relative;\"><a href=\"#%E5%89%8D%E8%A8%80\" aria-label=\"前言 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>前言</h1>\n<p>构建大型 SPA 应用时，代码分割和懒加载是比较常用的优化手段，在 Vue 生态下，使用 vue-router 很容易实现组件的懒加载。</p>\n<p>但应用里除了组件，还有庞大的业务逻辑，这部分如何分割和懒加载比较合适呢？</p>\n<p>使用 Vuex 管理状态的话，其提供了方法 <code>registerModule</code> 用于<a href=\"https://vuex.vuejs.org/guide/modules.html#dynamic-module-registration\">动态注册</a> Module。</p>\n<p>因此某个页面独有的业务逻辑和状态管理，在初始化全局 store 的时候可以不用引入，之后在该页面路由组件中再引入和注册 Vuex 模块。</p>\n<h1 id=\"简单的示例\" style=\"position:relative;\"><a href=\"#%E7%AE%80%E5%8D%95%E7%9A%84%E7%A4%BA%E4%BE%8B\" aria-label=\"简单的示例 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>简单的示例</h1>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">PageA</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./views/PageA.js'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> router <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">VueRouter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  routes<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span> path<span class=\"token operator\">:</span> <span class=\"token string\">'/page-a'</span><span class=\"token punctuation\">,</span> component<span class=\"token operator\">:</span> PageA <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>简单的 Vuex 模块：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// store/modules/page-a.js</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token constant\">VUEX_NS</span> <span class=\"token operator\">=</span> <span class=\"token string\">'page-a'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  namespaced<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">state</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      inventory<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        list<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  getters<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">inventoryList</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> state<span class=\"token punctuation\">.</span>inventory<span class=\"token punctuation\">.</span>list\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>实践时遭遇了几个问题：</p>\n<h2 id=\"问题-1：服务器客户端-在尚未注册-module-时，调用其下的-actionmutation-，vuex-因找不到对应函数而出错\" style=\"position:relative;\"><a href=\"#%E9%97%AE%E9%A2%98-1%EF%BC%9A%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%A2%E6%88%B7%E7%AB%AF-%E5%9C%A8%E5%B0%9A%E6%9C%AA%E6%B3%A8%E5%86%8C-module-%E6%97%B6%EF%BC%8C%E8%B0%83%E7%94%A8%E5%85%B6%E4%B8%8B%E7%9A%84-actionmutation-%EF%BC%8Cvuex-%E5%9B%A0%E6%89%BE%E4%B8%8D%E5%88%B0%E5%AF%B9%E5%BA%94%E5%87%BD%E6%95%B0%E8%80%8C%E5%87%BA%E9%94%99\" aria-label=\"问题 1：服务器客户端 在尚未注册 module 时，调用其下的 actionmutation ，vuex 因找不到对应函数而出错 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>问题 1：服务器/客户端 在尚未注册 Module 时，调用其下的 action/mutation ，Vuex 因找不到对应函数而出错</h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// views/PageA.js</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token constant\">PAGE_A_MODULE</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token constant\">VUEX_NS</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'store/modules/page-a'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">'PageA'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">beforeCreate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$store<span class=\"token punctuation\">.</span><span class=\"token function\">registerModule</span><span class=\"token punctuation\">(</span><span class=\"token constant\">VUEX_NS</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">PAGE_A_MODULE</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$store<span class=\"token punctuation\">.</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">VUEX_NS</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/fetchInventory</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"考虑服务器端预取数据注入给客户端的时候\" style=\"position:relative;\"><a href=\"#%E8%80%83%E8%99%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AB%AF%E9%A2%84%E5%8F%96%E6%95%B0%E6%8D%AE%E6%B3%A8%E5%85%A5%E7%BB%99%E5%AE%A2%E6%88%B7%E7%AB%AF%E7%9A%84%E6%97%B6%E5%80%99\" aria-label=\"考虑服务器端预取数据注入给客户端的时候 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>考虑服务器端预取数据注入给客户端的时候</h3>\n<p>客户（浏览器）端初始化代码，在初始化 router 之前，给 Vuex 全局 store 注入数据：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// entry-client.js</span>\nstore<span class=\"token punctuation\">.</span><span class=\"token function\">replaceState</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>__INITIAL_STATE__<span class=\"token punctuation\">)</span></code></pre></div>\n<p>此处的 <code>__INITIAL_STATE__</code> 是 Vue SSR 提供的一个功能，使得浏览器端可以复用服务器端已经预取过的数据。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 在所有预取钩子(preFetch hook) resolve 后，</span>\n<span class=\"token comment\">// 我们的 store 现在已经填充入渲染应用程序所需的状态。</span>\n<span class=\"token comment\">// 当我们将状态附加到上下文，</span>\n<span class=\"token comment\">// 并且 `template` 选项用于 renderer 时，</span>\n<span class=\"token comment\">// 状态将自动序列化为 `window.__INITIAL_STATE__`，并注入 HTML。</span>\ncontext<span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> store<span class=\"token punctuation\">.</span>state</code></pre></div>\n<p>此处的 <code>asyncData</code> 与 <a href=\"https://ssr.vuejs.org/zh/guide/data.html#%E6%95%B0%E6%8D%AE%E9%A2%84%E5%8F%96%E5%AD%98%E5%82%A8%E5%AE%B9%E5%99%A8-data-store\">Vue SSR 文档中的例子</a>类似，与 Nuxt.js 中的同名函数用法略有不同。</p>\n<p><code>prepareVuex</code> 为自定义的组件钩子函数，会先于 asyncData 调用，具体过程之后探讨。</p>\n<div class=\"gatsby-highlight\" data-language=\"diff\"><pre class=\"language-diff\"><code class=\"language-diff\"><span class=\"token unchanged\"><span class=\"token prefix unchanged\"> </span>export default {\n<span class=\"token prefix unchanged\"> </span>  name: 'PageA',\n</span><span class=\"token deleted-sign deleted\"><span class=\"token prefix deleted\">-</span>  beforeCreate() {\n<span class=\"token prefix deleted\">-</span>    this.$store.registerModule(VUEX_NS, PAGE_A_MODULE)\n<span class=\"token prefix deleted\">-</span>    return this.$store.dispatch(`${VUEX_NS}/fetchInventory`)\n</span><span class=\"token inserted-sign inserted\"><span class=\"token prefix inserted\">+</span>  prepareVuex({ store }) {\n<span class=\"token prefix inserted\">+</span>    store.registerModule(VUEX_NS, PAGE_A_MODULE)\n<span class=\"token prefix inserted\">+</span>  },\n<span class=\"token prefix inserted\">+</span>  asyncData({ store }) {\n<span class=\"token prefix inserted\">+</span>    return store.dispatch(`${VUEX_NS}/fetchInventory`)\n</span><span class=\"token unchanged\"><span class=\"token prefix unchanged\"> </span>  },\n<span class=\"token prefix unchanged\"> </span>}</span></code></pre></div>\n<p>此时会遇见</p>\n<h2 id=\"问题2-客户端没有用上服务器端预取的数据\" style=\"position:relative;\"><a href=\"#%E9%97%AE%E9%A2%982-%E5%AE%A2%E6%88%B7%E7%AB%AF%E6%B2%A1%E6%9C%89%E7%94%A8%E4%B8%8A%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AB%AF%E9%A2%84%E5%8F%96%E7%9A%84%E6%95%B0%E6%8D%AE\" aria-label=\"问题2 客户端没有用上服务器端预取的数据 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>问题2: 客户端没有用上服务器端预取的数据</h2>\n<p>解决方式：</p>\n<div class=\"gatsby-highlight\" data-language=\"diff\"><pre class=\"language-diff\"><code class=\"language-diff\"><span class=\"token unchanged\"><span class=\"token prefix unchanged\"> </span>export default {\n<span class=\"token prefix unchanged\"> </span>  name: 'PageA',\n</span><span class=\"token deleted-sign deleted\"><span class=\"token prefix deleted\">-</span>  prepareVuex({ store }) {\n<span class=\"token prefix deleted\">-</span>    store.registerModule(VUEX_NS, PAGE_A_MODULE)\n</span><span class=\"token inserted-sign inserted\"><span class=\"token prefix inserted\">+</span>  prepareVuex({ store, isClientInitialRoute }) {\n<span class=\"token prefix inserted\">+</span>    store.registerModule(VUEX_NS, PAGE_A_MODULE, { preserveState: isClientInitialRoute })\n</span><span class=\"token unchanged\"><span class=\"token prefix unchanged\"> </span>  },\n<span class=\"token prefix unchanged\"> </span>  asyncData({ store }) {\n<span class=\"token prefix unchanged\"> </span>    return store.dispatch(`${VUEX_NS}/fetchInventory`)\n<span class=\"token prefix unchanged\"> </span>  },\n</span><span class=\"token inserted-sign inserted\"><span class=\"token prefix inserted\">+</span>  beforeDestroy() {\n<span class=\"token prefix inserted\">+</span>    // 销毁该模块\n<span class=\"token prefix inserted\">+</span>    this.$store.unregisterModule(VUEX_NS)\n<span class=\"token prefix inserted\">+</span>  }\n</span><span class=\"token unchanged\"><span class=\"token prefix unchanged\"> </span>}</span></code></pre></div>\n<p>注册 Vuex 模块的时候使用了 <code>preserveState</code> ，若启用此选项，注册 Module 时若 <code>store.state[namespace]</code> 下已存在数据，便不会使用声明 vuex 模块时的初始 state 覆盖已有数据。但需要注意，若 state 中没有 namespace 相应数据却开启了此选项，Vuex 还是会报错。因此此处添加了一个输入参数 <code>isClientInitialRoute</code> ， 只有在客户端初次进入页面（可以使用服务器预取数据）时才开启 <code>preserveState</code> 选项。</p>\n<h2 id=\"问题3-组件热更新时，vuex-模块被销毁\" style=\"position:relative;\"><a href=\"#%E9%97%AE%E9%A2%983-%E7%BB%84%E4%BB%B6%E7%83%AD%E6%9B%B4%E6%96%B0%E6%97%B6%EF%BC%8Cvuex-%E6%A8%A1%E5%9D%97%E8%A2%AB%E9%94%80%E6%AF%81\" aria-label=\"问题3 组件热更新时，vuex 模块被销毁 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>问题3: 组件热更新时，Vuex 模块被销毁</h2>\n<p>开发期间使用 HotModuleReplacementPlugin 和 vue-loader，若改变了 PageA.js 中的代码，会触发热更新。在 <a href=\"https://github.com/vuejs/vue-hot-reload-api/blob/master/src/index.js\">vue-hot-reload-api</a> 中，当使用 vue-hot-reload-api 的 <code>reload</code> 方法处理组件实例时，该实例会被销毁而后重新创建。<code>beforeDestroy</code> 中销毁了 Vuex 的 <code>page-a</code> 模块，却没有调用 <code>prepareVuex</code> 方法重新注册，因此热更新之后，使用该模块也会报错。</p>\n<p>解决方案：</p>\n<div class=\"gatsby-highlight\" data-language=\"diff\"><pre class=\"language-diff\"><code class=\"language-diff\"><span class=\"token unchanged\"><span class=\"token prefix unchanged\"> </span>  asyncData({ store }) {\n<span class=\"token prefix unchanged\"> </span>    return store.dispatch(`${VUEX_NS}/fetchInventory`)\n<span class=\"token prefix unchanged\"> </span>  },\n</span><span class=\"token deleted-sign deleted\"><span class=\"token prefix deleted\">-</span>  beforeDestroy() {\n<span class=\"token prefix deleted\">-</span>    // 销毁该模块\n<span class=\"token prefix deleted\">-</span>    this.$store.unregisterModule(VUEX_NS)\n</span><span class=\"token inserted-sign inserted\"><span class=\"token prefix inserted\">+</span>  beforeRouteLeave(to, from, next) {\n<span class=\"token prefix inserted\">+</span>    this.$once('hook:beforeDestroy', () => {\n<span class=\"token prefix inserted\">+</span>      // 销毁该模块\n<span class=\"token prefix inserted\">+</span>      this.$store.unregisterModule(VUEX_NS)\n<span class=\"token prefix inserted\">+</span>    })\n<span class=\"token prefix inserted\">+</span>    next()\n</span><span class=\"token unchanged\"><span class=\"token prefix unchanged\"> </span>  }\n<span class=\"token prefix unchanged\"> </span>}</span></code></pre></div>\n<p>仔细想想，注册模块的时机是与路由相关的（进入页面之前），那么销毁的时机也可以与路由相关。不过并不适合在 <code>beforeRouteLeave</code> 钩子中立刻销毁模块。因为根据以下 vue-router 文档内容，在此钩子被调用完成时，整个页面还是在正常工作的（第2步到第11步中间），仍未进入组件的 destroy 过程，此时销毁模块会导致依赖其的所有组件异常。</p>\n<blockquote>\n<p><cite><a href=\"https://router.vuejs.org/zh/guide/advanced/navigation-guards.html#%E5%AE%8C%E6%95%B4%E7%9A%84%E5%AF%BC%E8%88%AA%E8%A7%A3%E6%9E%90%E6%B5%81%E7%A8%8B\">vue-router 文档中关于导航解析流程的部分</a></cite></p>\n<ol>\n<li>导航被触发。</li>\n<li>在失活的组件里调用离开守卫。</li>\n<li>调用全局的 beforeEach 守卫。</li>\n<li>在重用的组件里调用 beforeRouteUpdate 守卫 (2.2+)。</li>\n<li>在路由配置里调用 beforeEnter。</li>\n<li>解析异步路由组件。</li>\n<li>在被激活的组件里调用 beforeRouteEnter。</li>\n<li>调用全局的 beforeResolve 守卫 (2.5+)。</li>\n<li>导航被确认。</li>\n<li>调用全局的 afterEach 钩子。</li>\n<li>触发 DOM 更新。</li>\n<li>用创建好的实例调用 beforeRouteEnter 守卫中传给 next 的回调函数。</li>\n</ol>\n</blockquote>\n<p>因此安全的模块销毁时机需要在 DOM 更新中或后，旧的页面组件实例销毁过程调用时。</p>\n<h1 id=\"相关代码\" style=\"position:relative;\"><a href=\"#%E7%9B%B8%E5%85%B3%E4%BB%A3%E7%A0%81\" aria-label=\"相关代码 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>相关代码</h1>\n<p>最后的 PageA.js：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token constant\">PAGE_A_MODULE</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token constant\">VUEX_NS</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'store/modules/page-a'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">'PageA'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">prepareVuex</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> store<span class=\"token punctuation\">,</span> isClientInitialRoute <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    store<span class=\"token punctuation\">.</span><span class=\"token function\">registerModule</span><span class=\"token punctuation\">(</span><span class=\"token constant\">VUEX_NS</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">PAGE_A_MODULE</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> preserveState<span class=\"token operator\">:</span> isClientInitialRoute <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">asyncData</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> store <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> store<span class=\"token punctuation\">.</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">VUEX_NS</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/fetchInventory</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">beforeRouteLeave</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">to<span class=\"token punctuation\">,</span> <span class=\"token keyword\">from</span><span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">$once</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hook:beforeDestroy'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// 销毁该模块</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$store<span class=\"token punctuation\">.</span><span class=\"token function\">unregisterModule</span><span class=\"token punctuation\">(</span><span class=\"token constant\">VUEX_NS</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>两端的入口文件中相关代码如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">// router-util.ts</span>\n\n<span class=\"token keyword\">import</span> Vue<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> VueConstructor <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">VueCtor</span> <span class=\"token operator\">=</span> VueConstructor<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getHookFromComponent</span><span class=\"token punctuation\">(</span>compo<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> compo<span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>compo<span class=\"token punctuation\">.</span>options <span class=\"token operator\">&amp;&amp;</span> compo<span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">callComponentsHookWith</span><span class=\"token punctuation\">(</span>compoList<span class=\"token operator\">:</span> VueCtor<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> hookName<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> context<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> compoList<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>component<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> hook <span class=\"token operator\">=</span> <span class=\"token function\">getHookFromComponent</span><span class=\"token punctuation\">(</span>component<span class=\"token punctuation\">,</span> hookName<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hook<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token function\">hook</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>_ <span class=\"token operator\">=></span> _<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// entry-server.js</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token parameter\">context</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// set router's location</span>\n    router<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">)</span>\n\n    router<span class=\"token punctuation\">.</span><span class=\"token function\">onReady</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> matchedComponents <span class=\"token operator\">=</span> router<span class=\"token punctuation\">.</span><span class=\"token function\">getMatchedComponents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n      <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// 加上 try/catch 避免此 block 内抛出的错误造成 promise unhandledRejection</span>\n        <span class=\"token function\">callComponentsHookWith</span><span class=\"token punctuation\">(</span>matchedComponents<span class=\"token punctuation\">,</span> <span class=\"token string\">'prepareVuex'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> store <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">const</span> asyncDataResults <span class=\"token operator\">=</span> <span class=\"token function\">callComponentsHookWith</span><span class=\"token punctuation\">(</span>matchedComponents<span class=\"token punctuation\">,</span> <span class=\"token string\">'asyncData'</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">{</span>\n            store<span class=\"token punctuation\">,</span>\n            route<span class=\"token operator\">:</span> router<span class=\"token punctuation\">.</span>currentRoute<span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">)</span>\n        Promise<span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span>asyncDataResults<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          context<span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> store<span class=\"token punctuation\">.</span>state\n          <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span>reject<span class=\"token punctuation\">)</span>\n\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">reject</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> reject<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// entry-client.js</span>\n\nrouter<span class=\"token punctuation\">.</span><span class=\"token function\">onReady</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">initialRoute</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> initialMatched <span class=\"token operator\">=</span> router<span class=\"token punctuation\">.</span><span class=\"token function\">getMatchedComponents</span><span class=\"token punctuation\">(</span>initialRoute<span class=\"token punctuation\">)</span>\n  <span class=\"token function\">callComponentsHookWith</span><span class=\"token punctuation\">(</span>initialMatched<span class=\"token punctuation\">,</span> <span class=\"token string\">'prepareVuex'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> store<span class=\"token punctuation\">,</span> isClientInitialRoute<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n  router<span class=\"token punctuation\">.</span><span class=\"token function\">beforeResolve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">to<span class=\"token punctuation\">,</span> <span class=\"token keyword\">from</span><span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> matched <span class=\"token operator\">=</span> router<span class=\"token punctuation\">.</span><span class=\"token function\">getMatchedComponents</span><span class=\"token punctuation\">(</span>to<span class=\"token punctuation\">)</span>\n\n    <span class=\"token function\">callComponentsHookWith</span><span class=\"token punctuation\">(</span>matched<span class=\"token punctuation\">,</span> <span class=\"token string\">'prepareVuex'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> store <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n    Promise<span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span><span class=\"token function\">callComponentsHookWith</span><span class=\"token punctuation\">(</span>activated<span class=\"token punctuation\">,</span> <span class=\"token string\">'asyncData'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> store<span class=\"token punctuation\">,</span> route<span class=\"token operator\">:</span> to <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>next<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span>next<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">// actually mount to DOM</span>\n  app<span class=\"token punctuation\">.</span><span class=\"token function\">$mount</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#app'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>","excerpt":"前言 构建大型 SPA 应用时，代码分割和懒加载是比较常用的优化手段，在 Vue 生态下，使用 vue-router 很容易实现组件的懒加载。 但应用里除了组件，还有庞大的业务逻辑，这部分如何分割和懒加载比较合适呢？ 使用 Vuex…","tableOfContents":"<ul>\n<li><a href=\"/2018-07-03-Vuex-Dynamic-Module-Hints/#%E5%89%8D%E8%A8%80\">前言</a></li>\n<li>\n<p><a href=\"/2018-07-03-Vuex-Dynamic-Module-Hints/#%E7%AE%80%E5%8D%95%E7%9A%84%E7%A4%BA%E4%BE%8B\">简单的示例</a></p>\n<ul>\n<li>\n<p><a href=\"/2018-07-03-Vuex-Dynamic-Module-Hints/#%E9%97%AE%E9%A2%98-1%EF%BC%9A%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%A2%E6%88%B7%E7%AB%AF-%E5%9C%A8%E5%B0%9A%E6%9C%AA%E6%B3%A8%E5%86%8C-module-%E6%97%B6%EF%BC%8C%E8%B0%83%E7%94%A8%E5%85%B6%E4%B8%8B%E7%9A%84-actionmutation-%EF%BC%8Cvuex-%E5%9B%A0%E6%89%BE%E4%B8%8D%E5%88%B0%E5%AF%B9%E5%BA%94%E5%87%BD%E6%95%B0%E8%80%8C%E5%87%BA%E9%94%99\">问题 1：服务器/客户端 在尚未注册 Module 时，调用其下的 action/mutation ，Vuex 因找不到对应函数而出错</a></p>\n<ul>\n<li><a href=\"/2018-07-03-Vuex-Dynamic-Module-Hints/#%E8%80%83%E8%99%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AB%AF%E9%A2%84%E5%8F%96%E6%95%B0%E6%8D%AE%E6%B3%A8%E5%85%A5%E7%BB%99%E5%AE%A2%E6%88%B7%E7%AB%AF%E7%9A%84%E6%97%B6%E5%80%99\">考虑服务器端预取数据注入给客户端的时候</a></li>\n</ul>\n</li>\n<li><a href=\"/2018-07-03-Vuex-Dynamic-Module-Hints/#%E9%97%AE%E9%A2%982-%E5%AE%A2%E6%88%B7%E7%AB%AF%E6%B2%A1%E6%9C%89%E7%94%A8%E4%B8%8A%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AB%AF%E9%A2%84%E5%8F%96%E7%9A%84%E6%95%B0%E6%8D%AE\">问题2: 客户端没有用上服务器端预取的数据</a></li>\n<li><a href=\"/2018-07-03-Vuex-Dynamic-Module-Hints/#%E9%97%AE%E9%A2%983-%E7%BB%84%E4%BB%B6%E7%83%AD%E6%9B%B4%E6%96%B0%E6%97%B6%EF%BC%8Cvuex-%E6%A8%A1%E5%9D%97%E8%A2%AB%E9%94%80%E6%AF%81\">问题3: 组件热更新时，Vuex 模块被销毁</a></li>\n</ul>\n</li>\n<li><a href=\"/2018-07-03-Vuex-Dynamic-Module-Hints/#%E7%9B%B8%E5%85%B3%E4%BB%A3%E7%A0%81\">相关代码</a></li>\n</ul>","fields":{"slug":"/2018-07-03-Vuex-Dynamic-Module-Hints/","featureImageSrc":null},"frontmatter":{"title":"Vuex 模块动态注册的一些实践经验","date":"2018-07-03","author":null,"tags":["Vue","Vuex"],"use_toc":true,"coverImage":null}}},"pageContext":{"type":"posts","next":{"fields":{"slug":"/2018-05-03-Try-Rust-Webassemly/"},"frontmatter":{"title":"Try Rust WebAssembly","tags":["WebAssembly","Rust"]},"fileAbsolutePath":"/Users/bytedance/mydemos/gatsby-hello-friend/content/posts/2018-05-03-Try-Rust-Webassemly.md"},"previous":{"fields":{"slug":"/2018-07-31-Goodbye My Santa Monica Dream/"},"frontmatter":{"title":"Goodbye My Santa Monica Dream 🎵","tags":["吉他","音乐"]},"fileAbsolutePath":"/Users/bytedance/mydemos/gatsby-hello-friend/content/posts/2018-07-31-Goodbye My Santa Monica Dream.md"},"slug":"/2018-07-03-Vuex-Dynamic-Module-Hints/"}},"staticQueryHashes":["1425477374","3128451518"]}