{"componentChunkName":"component---src-templates-page-js","path":"/2020-03-07-Vuex-Webpack-HMR/","result":{"data":{"site":{"siteMetadata":{"title":"HP goes FE","author":"@hikerpig"}},"markdownRemark":{"id":"d66205d4-fcdb-552d-b65d-a110a9945107","html":"<p>使用 Webpack 构建 Vue 项目时，借助 vue-loader 和 vue-hot-reload-api，我们在开发的时候可以获得很好的组件热加载（Hot Module Replacement）体验。然而 vue-loader 中却没有关于 vuex 的配置（当然这也的确不是它应该插手的地方）。</p>\n<p>官方 vue-cli 的 vuex 插件也没有相应支持（在 cli serve 下如果更改 store 或是其依赖的模块，页面会自动刷新，这个行为是 hot reload 而不是 HMR）。</p>\n<p>Nuxt.js 框架秉承着 convention over configuration 的思想，在一定的目录和文件结构约定下，通过目录分析和脚手架文件模板，很好地解决了 HMR 的问题，生成 <code>store</code> 入口模块的相关代码在<a href=\"https://github.com/nuxt/nuxt.js/blob/dev/packages/vue-app/template/store.js\">这里</a>。</p>\n<p>在不使用 Nuxt 的情况下，我们也可以通过在项目中保持一定的模块规范来简单实现 Vuex HMR 的配置。</p>\n<h2 id=\"vuex-的-api\" style=\"position:relative;\"><a href=\"#vuex-%E7%9A%84-api\" aria-label=\"vuex 的 api permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Vuex 的 API</h2>\n<p>Vuex 自身是提供了 hotUpdate api 以及 <a href=\"https://vuex.vuejs.org/guide/hot-reload.html\">一个 HMR 的代码示例</a> 的。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>module<span class=\"token punctuation\">.</span>hot<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// accept actions and mutations as hot modules</span>\n  module<span class=\"token punctuation\">.</span>hot<span class=\"token punctuation\">.</span><span class=\"token function\">accept</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'./mutations'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'./modules/a'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// require the updated modules</span>\n    <span class=\"token comment\">// have to add .default here due to babel 6 module output</span>\n    <span class=\"token keyword\">const</span> newMutations <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./mutations'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>default\n    <span class=\"token keyword\">const</span> newModuleA <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./modules/a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>default\n    <span class=\"token comment\">// swap in the new modules and mutations</span>\n    store<span class=\"token punctuation\">.</span><span class=\"token function\">hotUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      mutations<span class=\"token operator\">:</span> newMutations<span class=\"token punctuation\">,</span>\n      modules<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        a<span class=\"token operator\">:</span> newModuleA\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>这个例子稍显简单，需要手动指定每一个 submodule 的路径。</p>\n<h2 id=\"解决方案\" style=\"position:relative;\"><a href=\"#%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88\" aria-label=\"解决方案 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>解决方案</h2>\n<p>假设项目中 vuex 相关文件的目录结构如下。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">src/store\n├── index.js\n└── modules\n    ├── complex\n    │   └── index.js\n    ├── sub.js // 一个 vuex 模块定义文件\n    ├── util.js // 一个随意的工具函数文件，不导出 vuex 模块定义，并不推荐这样与 module 并行的结构，但我们的方案不会误判，详情请继续往下看\n    └── ...</code></pre></div>\n<p>其中省略了上例中的 <code>mutations</code> 文件，将全局根模块的内容都写在 <code>store/index.js</code> 中。 <code>modules</code> 文件夹里存放模块的定义内容。</p>\n<p>那我们就可以使用 <a href=\"https://webpack.js.org/api/module-methods/#requirecontext\">require.context</a> 来动态得出依赖的模块列表。</p>\n<p>首先 <code>sub.js</code> 和 <code>complex/index.js</code> 需要服从一些我们预设的规则：</p>\n<ol>\n<li>vuex module 定义文件都使用 <code>export default</code> 导出</li>\n<li>如果是 <code>namespaced</code> 模块，需要通过 <code>export const VUEX_NS</code> 或者在 vuex module 定义中添加一个 <code>namespace: string</code> 字段来导出命名空间名。</li>\n</ol>\n<p>例如 sub.js 文件内容：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> greet <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./util'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token constant\">VUEX_NS</span> <span class=\"token operator\">=</span> <span class=\"token string\">'sub'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  namespaced<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  actions<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">test_sub_action</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'sub v1'</span><span class=\"token punctuation\">)</span>\n      <span class=\"token function\">greet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>在 store/index.js 中的例子如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> Vue <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span>\n<span class=\"token keyword\">import</span> Vuex <span class=\"token keyword\">from</span> <span class=\"token string\">'vuex'</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token constant\">SUB</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token constant\">VUEX_NS</span> <span class=\"token keyword\">as</span> <span class=\"token constant\">SUB_VUEX_NS</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./modules/sub'</span>\n<span class=\"token keyword\">import</span> <span class=\"token constant\">COMPLEX</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token constant\">VUEX_NS</span> <span class=\"token keyword\">as</span> <span class=\"token constant\">COMPLEX_VUEX_NS</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./modules/complex'</span>\n\nVue<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>Vuex<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> store <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vuex<span class=\"token punctuation\">.</span>Store</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  actions<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">test_action</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root action v1'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  modules<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">[</span><span class=\"token constant\">SUB_VUEX_NS</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token constant\">SUB</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token constant\">COMPLEX_VUEX_NS</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token constant\">COMPLEX</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> store\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>module<span class=\"token punctuation\">.</span>hot<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// submodules hmr</span>\n  <span class=\"token keyword\">const</span> moduleFiles <span class=\"token operator\">=</span> require<span class=\"token punctuation\">.</span><span class=\"token function\">context</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./modules'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">js$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> moduleFileKeys <span class=\"token operator\">=</span> moduleFiles<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">k</span> <span class=\"token operator\">=></span> moduleFiles<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n  module<span class=\"token punctuation\">.</span>hot<span class=\"token punctuation\">.</span><span class=\"token function\">accept</span><span class=\"token punctuation\">(</span>moduleFileKeys<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">deps</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'module files update'</span><span class=\"token punctuation\">,</span> deps<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">const</span> hotUpdatePayload <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      modules<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n    deps<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">moduleId</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> m <span class=\"token operator\">=</span> <span class=\"token function\">__webpack_require__</span><span class=\"token punctuation\">(</span>moduleId<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">const</span> moduleDef <span class=\"token operator\">=</span> m<span class=\"token punctuation\">.</span>default\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>moduleDef <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>moduleDef<span class=\"token punctuation\">.</span>actions <span class=\"token operator\">||</span> moduleDef<span class=\"token punctuation\">.</span>mutations<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> namespace <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>moduleDef<span class=\"token punctuation\">.</span>namespaced<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token comment\">// Guess namespace</span>\n          namespace <span class=\"token operator\">=</span> moduleDef<span class=\"token punctuation\">.</span>namespace <span class=\"token operator\">||</span> m<span class=\"token punctuation\">[</span><span class=\"token string\">'VUEX_NS'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> moduleDef<span class=\"token punctuation\">[</span><span class=\"token string\">'namespace'</span><span class=\"token punctuation\">]</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>namespace<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hotUpdatePayload<span class=\"token punctuation\">.</span>modules<span class=\"token punctuation\">[</span>namespace<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Already exists module with namespace </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>namespace<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">}</span>\n          Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span>hotUpdatePayload<span class=\"token punctuation\">.</span>modules<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>namespace<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> moduleDef <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n          Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span>hotUpdatePayload<span class=\"token punctuation\">,</span> moduleDef<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n    store<span class=\"token punctuation\">.</span><span class=\"token function\">hotUpdate</span><span class=\"token punctuation\">(</span>hotUpdatePayload<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"样例说明\" style=\"position:relative;\"><a href=\"#%E6%A0%B7%E4%BE%8B%E8%AF%B4%E6%98%8E\" aria-label=\"样例说明 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>样例说明</h3>\n<p>在以上的目录结构下，<code>moduleFileKeys</code> 的结果为：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">[</span><span class=\"token string\">\"./src/store/modules/complex/index.js\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"./src/store/modules/sub.js\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"./src/store/modules/util.js\"</span><span class=\"token punctuation\">]</span></code></pre></div>\n<p>这其中任一个文件发生变化，都会在 module 更新结束后，进入给 <code>module.hot.accept</code> 函数传入的回调函数 <code>(deps) => {...}</code> 中，执行我们自定义的更新逻辑。</p>\n<p><code>__webpack_require__</code> 是一个 webpack module 作用域内特有的函数，文档<a href=\"https://webpack.js.org/api/module-variables/#__webpack_require__-webpack-specific\">在此</a>。P.S. 这里使用它，而不是 <code>require(moduleId)</code>，我们都知道源文件中的 <code>require</code> 语句会被 webpack 分析并在生成目标代码时改写，但若入参不是字符串，不能被静态分析出具体的模块，在生成的 bundle 里会被 webpack 转为 <code>__webpack_require__(\"./src/store sync recursive\")(moduleId)</code>，在我的测试中，<code>__webpack_require__(\"./src/store sync recursive\")</code> 这句的结果是一个 <code>webpackEmptyContext</code>，调用它会抛出 MODULE<em>NOT</em>FOUND 的异常。</p>\n<p>接下来关于 moduleDef 判断的代码建立在之前说的预设规则上，可以根据项目实际修改。</p>\n<p>P.S. 目前这个方案没有解决两层及以上深度的 module 情况，实际使用中这个似乎也不常见。</p>","excerpt":"使用 Webpack 构建 Vue 项目时，借助 vue-loader 和 vue-hot-reload-api，我们在开发的时候可以获得很好的组件热加载（Hot Module Replacement）体验。然而 vue-loader 中却没有关于 vuex…","tableOfContents":"<ul>\n<li><a href=\"/2020-03-07-Vuex-Webpack-HMR/#vuex-%E7%9A%84-api\">Vuex 的 API</a></li>\n<li>\n<p><a href=\"/2020-03-07-Vuex-Webpack-HMR/#%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88\">解决方案</a></p>\n<ul>\n<li><a href=\"/2020-03-07-Vuex-Webpack-HMR/#%E6%A0%B7%E4%BE%8B%E8%AF%B4%E6%98%8E\">样例说明</a></li>\n</ul>\n</li>\n</ul>","fields":{"slug":"/2020-03-07-Vuex-Webpack-HMR/","featureImageSrc":null},"frontmatter":{"title":"一次 Webpack 下的 Vuex HMR 尝试","date":"2020-03-07","author":null,"tags":["Engineering","Webpack","Vuex"],"use_toc":true,"coverImage":null}}},"pageContext":{"type":"posts","next":{"fields":{"slug":"/2020-02-19-Regex-Collection/"},"frontmatter":{"title":"我的常用正则表达式清单","tags":["工具","正则"]},"fileAbsolutePath":"/Users/bytedance/mydemos/gatsby-hello-friend/content/posts/2020-02-19-Regex-Collection.md"},"previous":{"fields":{"slug":"/2020-03-16-A-Glimpse-Of-Web-Audio-API/"},"frontmatter":{"title":"初识 Web Audio API - 术语扫盲","tags":["audio","Avtech"]},"fileAbsolutePath":"/Users/bytedance/mydemos/gatsby-hello-friend/content/posts/2020-03-16-A-Glimpse-Of-Web-Audio-API.md"},"slug":"/2020-03-07-Vuex-Webpack-HMR/"}},"staticQueryHashes":["1425477374","3128451518"]}