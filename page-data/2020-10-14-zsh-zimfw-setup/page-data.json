{"componentChunkName":"component---src-templates-page-js","path":"/2020-10-14-zsh-zimfw-setup/","result":{"data":{"site":{"siteMetadata":{"title":"HP goes FE","author":"@hikerpig"}},"markdownRemark":{"id":"6ffa59b4-b557-5839-ac55-47b0f31576d0","html":"<p>之前使用 oh-my-zsh 的自带 git/nvm 等插件有时候有性能问题，同时据说其框架本身相比其他一些主打速度的配置框架(prezto/zimfw 等)也会慢一点。</p>\n<p>稍微折腾了一下，使用 <a href=\"https://github.com/zimfw/zimfw\">zimfw</a> 作为 zsh 配置框架，它在<a href=\"https://github.com/zimfw/zimfw/wiki/Speed\">速度</a>和可配置性间达到了很好的平衡。</p>\n<p>个人切换后，试了下跑 zprof，启动时间只有原先的一半，度量方式参考 <a href=\"https://stevenvanbael.com/profiling-zsh-startup\">Profiling zsh startup time</a>。</p>\n<h2 id=\"插件加载\" style=\"position:relative;\"><a href=\"#%E6%8F%92%E4%BB%B6%E5%8A%A0%E8%BD%BD\" aria-label=\"插件加载 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>插件加载</h2>\n<p>用上<a href=\"https://github.com/zimfw/zimfw/wiki/Modules\">自带的模块</a>和<a href=\"https://github.com/zsh-users/\">zsh-users</a>里一些优秀的插件，就已经有很好的表现，其中 zsh-users/zsh-autosuggestions 和 zsh-users/zsh-syntax-highlighting 能让 zsh 也有类似于 fish 一样友好的代码高亮反馈和输入自动补全功能。zimfw 比较友好的一点就在于默认配置（使用其提供的安装脚本）里给出的组合就已经很棒了。</p>\n<p>添加插件的方式与 oh-my-zsh 不太一样，后者需要把插件添加到指定的 plugins 目录（一般为 clone repo 或者拷贝文件），然后在 <code>.zshrc</code> 文件里 <code>plugins=()</code> 数组里添加插件名。</p>\n<p>而 zimfw 的方式则稍微方便一点，除了类似后者的方式外，还可以不用手动操作目录而是在 <code>.zimrc</code> 文件中添加模块名（一般为 github 上的 user/repo 名），可在 <a href=\"https://github.com/unixorn/awesome-zsh-plugins\">awesome-zsh-plugins</a> 里寻找合适插件，多数与配置框架无关(可以不局限在 oh-my-zsh 提供的插件目录里)。</p>\n<p>修改配置文件后，使用命令 <code>zimfw install</code> 下载并编译插件(会使用 zsh builtin 的 <code>zcompile</code> 将 <code>.zsh</code> 文件编译为 <code>.zwc</code> 字节码，提高下次加载的速度)，打开新 shell 时新插件生效。</p>\n<h2 id=\"外观和主题\" style=\"position:relative;\"><a href=\"#%E5%A4%96%E8%A7%82%E5%92%8C%E4%B8%BB%E9%A2%98\" aria-label=\"外观和主题 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>外观和主题</h2>\n<p>zimfw 的主题远不如 oh-my-zsh 丰富，自己的 gallery 里都是偏向极简的风格，不过我们可以自己找一些成熟的主题 <a href=\"https://github.com/romkatv/powerlevel10k\">powerlevel10k</a> 使用，带有问答式的新手配置指导，功能丰富，推荐使用。</p>\n<h2 id=\"一些配置\" style=\"position:relative;\"><a href=\"#%E4%B8%80%E4%BA%9B%E9%85%8D%E7%BD%AE\" aria-label=\"一些配置 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>一些配置</h2>\n<p><code>~/.zimrc</code></p>\n<div class=\"gatsby-highlight\" data-language=\"zsh\"><pre class=\"language-zsh\"><code class=\"language-zsh\"># Start configuration added by Zim install {{{\n# -------\n# Modules\n# -------\n# Sets sane Zsh built-in environment options.\nzmodule environment\n# Applies correct bindkeys for input events.\nzmodule input\n# Sets a custom terminal title.\nzmodule termtitle\n# Utility aliases and functions. Adds colour to ls, grep and less.\nzmodule utility\nzmodule directory\n\n#\n# Prompt\n#\n# Exposes git repository status information to prompts.\nzmodule git-info\n\n# Theme\nzmodule romkatv/powerlevel10k\n\n# Additional completion definitions for Zsh.\nzmodule zsh-users/zsh-completions\n# Enables and configures smart and extensive tab completion.\n# completion must be sourced after zsh-users/zsh-completions\nzmodule completion\n# Fish-like autosuggestions for Zsh.\nzmodule zsh-users/zsh-autosuggestions\n# Fish-like syntax highlighting for Zsh.\n# zsh-users/zsh-syntax-highlighting must be sourced after completion\nzmodule zsh-users/zsh-syntax-highlighting\n# Fish-like history search (up arrow) for Zsh.\n# zsh-users/zsh-history-substring-search must be sourced after zsh-users/zsh-syntax-highlighting\nzmodule zsh-users/zsh-history-substring-search\n# }}} End configuration added by Zim install\n\n# Custom 个人推荐的插件\nzmodule DarrinTisdale/zsh-aliases-exa\nzmodule zsh-users/zaw\nzmodule wookayin/fzf-fasd</code></pre></div>\n<p>介绍一些程序和插件:</p>\n<ul>\n<li><a href=\"https://segmentfault.com/a/1190000011327993\">快速跳转工具--FASD 简单介绍</a></li>\n</ul>\n<h2 id=\"参考文章\" style=\"position:relative;\"><a href=\"#%E5%8F%82%E8%80%83%E6%96%87%E7%AB%A0\" aria-label=\"参考文章 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>参考文章</h2>\n<ul>\n<li><a href=\"https://www.jkg.tw/p2876/\">打造屬於你自己的極速 Shell「iTerm + zsh + zim + powerlevel10k」</a></li>\n<li><a href=\"https://medium.com/starbugs/%E6%89%93%E9%80%A0-10x-engineer-zsh-shell-97e40db76391\">打造 10X Engineer Shell 工作環境. SRE 討生活篇 | by smalltown | Starbugs Weekly 星巴哥技術專欄 | Medium</a></li>\n<li><a href=\"https://htr3n.github.io/2018/07/faster-zsh\">Faster and enjoyable ZSH</a></li>\n<li><a href=\"https://blog.spencerwoo.com/2020/07/remove-nvm-to-speed-up-zsh/\">Quit using nvm：快删掉这个占据 Zsh 启动时间一半的怪物！ - Spencer's Blog</a></li>\n</ul>","excerpt":"之前使用 oh-my-zsh 的自带 git/nvm 等插件有时候有性能问题，同时据说其框架本身相比其他一些主打速度的配置框架(prezto/zimfw 等)也会慢一点。 稍微折腾了一下，使用 zimfw 作为 zsh…","tableOfContents":"<ul>\n<li><a href=\"/2020-10-14-zsh-zimfw-setup/#%E6%8F%92%E4%BB%B6%E5%8A%A0%E8%BD%BD\">插件加载</a></li>\n<li><a href=\"/2020-10-14-zsh-zimfw-setup/#%E5%A4%96%E8%A7%82%E5%92%8C%E4%B8%BB%E9%A2%98\">外观和主题</a></li>\n<li><a href=\"/2020-10-14-zsh-zimfw-setup/#%E4%B8%80%E4%BA%9B%E9%85%8D%E7%BD%AE\">一些配置</a></li>\n<li><a href=\"/2020-10-14-zsh-zimfw-setup/#%E5%8F%82%E8%80%83%E6%96%87%E7%AB%A0\">参考文章</a></li>\n</ul>","fields":{"slug":"/2020-10-14-zsh-zimfw-setup/","featureImageSrc":null},"frontmatter":{"title":"使用 zimfw 作为 zsh 配置框架","date":"2020-10-14","author":null,"tags":["zsh","折腾"],"use_toc":true,"coverImage":null}}},"pageContext":{"type":"posts","next":{"fields":{"slug":"/2020-09-04-Hiding-My-Heart/"},"frontmatter":{"title":"Hiding My Heart 🎵","tags":["吉他","音乐"]},"fileAbsolutePath":"/Users/bytedance/mydemos/gatsby-hello-friend/content/posts/2020-09-04-Hiding-My-Heart.md"},"previous":null,"slug":"/2020-10-14-zsh-zimfw-setup/"}},"staticQueryHashes":["1425477374","3128451518"]}