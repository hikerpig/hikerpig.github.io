{"componentChunkName":"component---src-templates-page-js","path":"/2018-01-21-typed-vue-mixins/","result":{"data":{"site":{"siteMetadata":{"title":"HP goes FE","author":"@hikerpig"}},"markdownRemark":{"id":"d34af4f9-fe3d-5504-aa37-e4fb9d9786ec","html":"<p>转到用 Typescript 写 Vue 应用以后，经过一轮工具链和依赖的洗礼，总算蹒跚地能走起来了，不过有一个很常用的功能 mixin，似乎还没有官方的解决方案。</p>\n<p>既想享受 mixin 的灵活和方便，又想收获 ts 的类型系统带来的安全保障和开发时使用 IntelliSense 的顺滑体验。</p>\n<p>vuejs 官方组织里有一个 'vue-class-component' 以及连带推荐的 'vue-property-decorator'，都没有相应实现。翻了下前者的 issue，有一条挂了好些时间的待做 feature 就是 mixin 的支持。</p>\n<p>也不是什么复杂的事，自己写一个吧。</p>\n<blockquote>\n<p>后注：vue-class-component 6.2.0 开始提供 <a href=\"https://github.com/vuejs/vue-class-component/commit/cdcbfe5bb1a4c9d59a4b3066477f49c9aae8e2fc\">mixins</a> 方法，和本文的实现思路相似。</p>\n</blockquote>\n<h1 id=\"实现\" style=\"position:relative;\"><a href=\"#%E5%AE%9E%E7%8E%B0\" aria-label=\"实现 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>实现</h1>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> Vue<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> VueConstructor <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">type</span> <span class=\"token class-name\">VClass<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">new</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token constant\">T</span>\n<span class=\"token punctuation\">}</span> <span class=\"token operator\">&amp;</span> Pick<span class=\"token operator\">&lt;</span>VueConstructor<span class=\"token punctuation\">,</span> <span class=\"token keyword\">keyof</span> VueConstructor<span class=\"token operator\">></span>\n\n<span class=\"token comment\">/**\n * mixins for class style vue component\n */</span>\n<span class=\"token keyword\">function</span> <span class=\"token generic-function\"><span class=\"token function\">Mixins</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token constant\">A</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>c<span class=\"token operator\">:</span> VClass<span class=\"token operator\">&lt;</span><span class=\"token constant\">A</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> VClass<span class=\"token operator\">&lt;</span><span class=\"token constant\">A</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">function</span> <span class=\"token generic-function\"><span class=\"token function\">Mixins</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token constant\">A</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">B</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>c<span class=\"token operator\">:</span> VClass<span class=\"token operator\">&lt;</span><span class=\"token constant\">A</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> c1<span class=\"token operator\">:</span> VClass<span class=\"token operator\">&lt;</span><span class=\"token constant\">B</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> VClass<span class=\"token operator\">&lt;</span><span class=\"token constant\">A</span><span class=\"token operator\">&amp;</span><span class=\"token constant\">B</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">function</span> <span class=\"token generic-function\"><span class=\"token function\">Mixins</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token constant\">A</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">B</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">C</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>c<span class=\"token operator\">:</span> VClass<span class=\"token operator\">&lt;</span><span class=\"token constant\">A</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> c1<span class=\"token operator\">:</span> VClass<span class=\"token operator\">&lt;</span><span class=\"token constant\">B</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> c2<span class=\"token operator\">:</span> VClass<span class=\"token operator\">&lt;</span><span class=\"token constant\">C</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> VClass<span class=\"token operator\">&lt;</span><span class=\"token constant\">A</span><span class=\"token operator\">&amp;</span><span class=\"token constant\">B</span><span class=\"token operator\">&amp;</span><span class=\"token constant\">C</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">function</span> <span class=\"token generic-function\"><span class=\"token function\">Mixins</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>c<span class=\"token operator\">:</span> VClass<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>traits<span class=\"token operator\">:</span> <span class=\"token builtin\">Array</span><span class=\"token operator\">&lt;</span>VClass<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">>></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> VClass<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> c<span class=\"token punctuation\">.</span><span class=\"token function\">extend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    mixins<span class=\"token operator\">:</span> traits\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>声明 <code>VClass&#x3C;T></code> 可作为 T 的类构造器。同时通过 <code>Pick</code> 拿到 Vue 的构造器上的静态方法（extend/mixin 之类），如此才能够支持下面这段中的真正实现，通过调用一个 Vue 的子类构造器上的 <code>extend</code> 方法生成新的子类构造器。</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">function</span> <span class=\"token generic-function\"><span class=\"token function\">Mixins</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>c<span class=\"token operator\">:</span> VClass<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>traits<span class=\"token operator\">:</span> <span class=\"token builtin\">Array</span><span class=\"token operator\">&lt;</span>VClass<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">>></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> VClass<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> c<span class=\"token punctuation\">.</span><span class=\"token function\">extend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    mixins<span class=\"token operator\">:</span> traits\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>至于 ABC 这个纯粹是类型声明的体力活了。</p>\n<h1 id=\"使用\" style=\"position:relative;\"><a href=\"#%E4%BD%BF%E7%94%A8\" aria-label=\"使用 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>使用</h1>\n<p>实际使用时:</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Component<span class=\"token punctuation\">,</span> Vue <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Mixins <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../../util/mixins'</span>\n\n@Component\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">PageMixin</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">{</span>\n  title <span class=\"token operator\">=</span> <span class=\"token string\">'Test Page'</span>\n\n  <span class=\"token function\">redirectTo</span><span class=\"token punctuation\">(</span>path<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'calling reidrectTo'</span><span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$router<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> path <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IDisposable</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">dispose</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>args<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span>\n<span class=\"token punctuation\">}</span>\n\n@Component\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">DisposableMixin</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">{</span>\n  _disposables<span class=\"token operator\">:</span> IDisposable<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n  <span class=\"token function\">created</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'disposable mixin created'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_disposables <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">beforeDestroy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'about to clear disposables'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_disposables<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      d<span class=\"token punctuation\">.</span><span class=\"token function\">dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">delete</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_disposables\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">registerDisposable</span><span class=\"token punctuation\">(</span>d<span class=\"token operator\">:</span> IDisposable<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_disposables<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  template<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  &lt;div>\n    &lt;h1>{{ title }}&lt;/h1>\n    &lt;p>Counted: {{ counter }}&lt;/p>\n  &lt;/div>\n  </span><span class=\"token template-punctuation string\">`</span></span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TimerPage</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Mixins</span><span class=\"token punctuation\">(</span>PageMixin<span class=\"token punctuation\">,</span> DisposableMixin<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  counter <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n  <span class=\"token function\">mounted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> timer <span class=\"token operator\">=</span> <span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>counter<span class=\"token operator\">++</span> <span class=\"token operator\">>=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">redirectTo</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/otherpage'</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'count to'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>counter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">registerDisposable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token function\">dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">clearInterval</span><span class=\"token punctuation\">(</span>timer<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">count to 1\ncount to 2\ncount to 3\ncalling reidrectTo /otherpage\nabout to clear disposables</code></pre></div>\n<p>注意到直接 <code>extends Vue</code> 的 <code>DisposableMixin</code> 并不是一个有效的 Vue 组件，也不可以直接在 <code>mixins</code> 选项里使用，如果要被以 <code>Vue.extend</code> 方式扩展的自定义组件使用，记住使用 <code>Component</code> 包装一层。</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> ExtendedComponent <span class=\"token operator\">=</span> Vue<span class=\"token punctuation\">.</span><span class=\"token function\">extend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">'ExtendedComponent'</span><span class=\"token punctuation\">,</span>\n  mixins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token function\">Component</span><span class=\"token punctuation\">(</span>DisposableMixin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h1 id=\"abstract-class\" style=\"position:relative;\"><a href=\"#abstract-class\" aria-label=\"abstract class permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Abstract class</h1>\n<p>在业务系统中，多数情况需求下会更复杂，提供一些基础功能，但有些部分需要留给继承者自行实现，这个时候使用抽象类就很合适。</p>\n<h2 id=\"直接继承\" style=\"position:relative;\"><a href=\"#%E7%9B%B4%E6%8E%A5%E7%BB%A7%E6%89%BF\" aria-label=\"直接继承 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>直接继承</h2>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">abstract</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AbstractMusicPlayer</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">abstract</span> audioSrc<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span>\n  \n  playing <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n  \n  <span class=\"token function\">togglePlay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>playing <span class=\"token operator\">=</span> <span class=\"token operator\">!</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>playing\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n@Component\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">MusicPlayerA</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">AbstractMusicPlayer</span> <span class=\"token punctuation\">{</span>\n  audioSrc <span class=\"token operator\">=</span> <span class=\"token string\">'/audio-a.mp3'</span>\n<span class=\"token punctuation\">}</span>\n\n@Component\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">MusicPlayerB</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">AbstractMusicPlayer</span> <span class=\"token punctuation\">{</span>\n  staticBase <span class=\"token operator\">=</span> <span class=\"token string\">'/statics'</span>\n\n  <span class=\"token keyword\">get</span> <span class=\"token function\">audioSrc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>staticBase<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/audio-b.mp3</span><span class=\"token template-punctuation string\">`</span></span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"使用-mixins\" style=\"position:relative;\"><a href=\"#%E4%BD%BF%E7%94%A8-mixins\" aria-label=\"使用 mixins permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>使用 Mixins</h2>\n<h3 id=\"坏方法：欺骗，以及注释\" style=\"position:relative;\"><a href=\"#%E5%9D%8F%E6%96%B9%E6%B3%95%EF%BC%9A%E6%AC%BA%E9%AA%97%EF%BC%8C%E4%BB%A5%E5%8F%8A%E6%B3%A8%E9%87%8A\" aria-label=\"坏方法：欺骗，以及注释 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>坏方法：欺骗，以及注释</h3>\n<p>但抽象类是无法被实例化的，并不满足 <code>{ new(): T }</code> 这个要求，因此只能被继承，而<strong>不能</strong>被混入，由于同样的原因，抽象类也无法被 'vue-class-component' 的 <code>Component</code> 函数装饰。</p>\n<p>这时候只好将实现了的功能写入 Mixin 中，待实现的功能放到接口里，让具体类来实现。</p>\n<div class=\"gatsby-highlight\" data-language=\"typescriptvue-class-component\"><pre class=\"language-typescriptvue-class-component\"><code class=\"language-typescriptvue-class-component\">interface IMusicSourceProvider {\n  audioSrc: string\n}\n\n/**\n * 需要实现 IPlayerImplementation\n */\n@Component\nclass PlayerMixin extends Vue {\n  /** @abstract 必须实现 */\n  audioSrc: string\n\n  logSrc() {\n    console.log(this.audioSrc)\n  }\n}\n\ninterface IPlayerImplementation extends IMusicSourceProvider {}\n\n@Component\nclass OtherMixin extends Vue {\n  description = &#39;另一个 Mixin&#39;\n}\n\n@Component\nclass RealPlayer extends Mixins(PlayerMixin, OtherMixin) implements IPlayerImplementation {\n  audioSrc = &#39;/audio-c.mp3&#39;\n}\n\n// 无法正常工作\n@Component\nclass BrokenPlayer extends Mixins(PlayerMixin, OtherMixin) {\n}</code></pre></div>\n<p>鉴于 <code>@Component</code> 装饰器的实现方式，这种欺骗编译器的方式其实还是比较拙劣的。</p>\n<p>如果一个具体类继承了 <code>PlayerMixin</code>，却没有使用 getter 或 property initializer 实现 <code>audioSrc</code> 这个属性，编译器无法告诉你这个错误（不开启严格模式的情况下），但实际使用中 <code>audioSrc</code> 其实是没有被初始化的，你会发现 <code>BrokenPlayer</code> 的实例当中 <code>_data</code> 里并不包含 <code>audioSrc</code>，即便在实例化后手动设置该值，Vue 也无法监听到该值的变化，会造成一些比较隐秘的 bug。</p>\n<p>我们只能在代码里小心翼翼写上注释，期待使用者不要忘了这件事。</p>\n<p>也可以执行一些开发时候的额外检查，如下：</p>\n<h4 id=\"自定义装饰器-abstractproperty\" style=\"position:relative;\"><a href=\"#%E8%87%AA%E5%AE%9A%E4%B9%89%E8%A3%85%E9%A5%B0%E5%99%A8-abstractproperty\" aria-label=\"自定义装饰器 abstractproperty permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>自定义装饰器 AbstractProperty</h4>\n<p>vue-class-component 提供了 <a href=\"https://github.com/vuejs/vue-class-component#create-custom-decorators\">createDecorator</a> 方法来创建其体系下的自定义装饰器，我们可以这么用：</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createDecorator <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-class-component'</span>\n\n<span class=\"token comment\">// 一个什么都不做的装饰器，在 production 环境下启用。不使用 createDecorator</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">HolderDecorator</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>ctor<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> ctor\n\n<span class=\"token comment\">/**\n * Only for vue-class-component decorated class\n */</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> AbstractProperty <span class=\"token operator\">=</span> isProduction <span class=\"token operator\">?</span> HolderDecorator<span class=\"token operator\">:</span>\n<span class=\"token function\">createDecorator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> originCreated <span class=\"token operator\">=</span> options<span class=\"token punctuation\">.</span>created\n  options<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">created</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>originCreated<span class=\"token punctuation\">)</span> <span class=\"token function\">originCreated</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> arguments<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>key <span class=\"token keyword\">in</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">未实现 AbstractProperty '</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>key<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">'</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n\n@Component\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">PlayerMixin</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">{</span>\n  @AbstractProperty\n  audioSrc<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span>\n\n  <span class=\"token function\">logSrc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>audioSrc<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n@Component\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">BrokenPlayer</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Mixins</span><span class=\"token punctuation\">(</span>PlayerMixin<span class=\"token punctuation\">,</span> OtherMixin<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> player <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BrokenPlayer</span>\n<span class=\"token comment\">// 未实现 AbstractProperty 'audioSrc'</span></code></pre></div>\n<h3 id=\"没那么坏的方法：中间类\" style=\"position:relative;\"><a href=\"#%E6%B2%A1%E9%82%A3%E4%B9%88%E5%9D%8F%E7%9A%84%E6%96%B9%E6%B3%95%EF%BC%9A%E4%B8%AD%E9%97%B4%E7%B1%BB\" aria-label=\"没那么坏的方法：中间类 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>没那么坏的方法：中间类</h3>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\">@Component\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">_PlayerImpl</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">AbstractMusicPlayer</span> <span class=\"token punctuation\">{</span>\n  audioSrc <span class=\"token operator\">=</span> <span class=\"token string\">'/audio-d.mp3'</span>\n<span class=\"token punctuation\">}</span>\n\n@Component\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">RealPlayer2</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Mixins</span><span class=\"token punctuation\">(</span>_PlayerImpl<span class=\"token punctuation\">,</span> OtherMixin<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>使用中间类 <code>_PlayerImpl</code> 来实现抽象类的抽象部分，然后再被真正的使用者 <code>RealPlayer2</code> 使用。啰嗦了一点，但是类型安全。</p>","excerpt":"转到用 Typescript 写 Vue 应用以后，经过一轮工具链和依赖的洗礼，总算蹒跚地能走起来了，不过有一个很常用的功能 mixin，似乎还没有官方的解决方案。 既想享受 mixin 的灵活和方便，又想收获 ts 的类型系统带来的安全保障和开发时使用 IntelliSense…","tableOfContents":"<ul>\n<li><a href=\"/2018-01-21-typed-vue-mixins/#%E5%AE%9E%E7%8E%B0\">实现</a></li>\n<li><a href=\"/2018-01-21-typed-vue-mixins/#%E4%BD%BF%E7%94%A8\">使用</a></li>\n<li>\n<p><a href=\"/2018-01-21-typed-vue-mixins/#abstract-class\">Abstract class</a></p>\n<ul>\n<li><a href=\"/2018-01-21-typed-vue-mixins/#%E7%9B%B4%E6%8E%A5%E7%BB%A7%E6%89%BF\">直接继承</a></li>\n<li>\n<p><a href=\"/2018-01-21-typed-vue-mixins/#%E4%BD%BF%E7%94%A8-mixins\">使用 Mixins</a></p>\n<ul>\n<li>\n<p><a href=\"/2018-01-21-typed-vue-mixins/#%E5%9D%8F%E6%96%B9%E6%B3%95%EF%BC%9A%E6%AC%BA%E9%AA%97%EF%BC%8C%E4%BB%A5%E5%8F%8A%E6%B3%A8%E9%87%8A\">坏方法：欺骗，以及注释</a></p>\n<ul>\n<li><a href=\"/2018-01-21-typed-vue-mixins/#%E8%87%AA%E5%AE%9A%E4%B9%89%E8%A3%85%E9%A5%B0%E5%99%A8-abstractproperty\">自定义装饰器 AbstractProperty</a></li>\n</ul>\n</li>\n<li><a href=\"/2018-01-21-typed-vue-mixins/#%E6%B2%A1%E9%82%A3%E4%B9%88%E5%9D%8F%E7%9A%84%E6%96%B9%E6%B3%95%EF%BC%9A%E4%B8%AD%E9%97%B4%E7%B1%BB\">没那么坏的方法：中间类</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>","fields":{"slug":"/2018-01-21-typed-vue-mixins/","featureImageSrc":null},"frontmatter":{"title":"在 Typescript 中使用可被复用的 Vue Mixin","date":"2018-01-21","author":null,"tags":["Typescript","Vue"],"use_toc":null,"coverImage":null}}},"pageContext":{"type":"posts","next":{"fields":{"slug":"/2017-09-25-ES6+Babel-little-bug-under-IE11/"},"frontmatter":{"title":"ES6 Class 和 Babel 6 在 IE 10 及以下时候的一个坑","tags":["Javascript","Babel"]},"fileAbsolutePath":"/Users/bytedance/mydemos/gatsby-hello-friend/content/posts/2017-09-25-ES6+Babel-little-bug-under-IE11.md"},"previous":{"fields":{"slug":"/2018-04-02-Customize-Error-in-Typescript/"},"frontmatter":{"title":"在 Typescript 中继承 Error 对象","tags":["Typescript","Javascript"]},"fileAbsolutePath":"/Users/bytedance/mydemos/gatsby-hello-friend/content/posts/2018-04-02-Customize-Error-in-Typescript.md"},"slug":"/2018-01-21-typed-vue-mixins/"}},"staticQueryHashes":["1425477374","3128451518"]}