{"componentChunkName":"component---src-templates-page-js","path":"/2019-12-11-Browser-Storage-Limit/","result":{"data":{"site":{"siteMetadata":{"title":"HP goes FE","author":"@hikerpig"}},"markdownRemark":{"id":"1017364a-c4f3-55ff-8d36-35ad81e90e24","html":"<p>以下列出在 <a href=\"https://duomu.tv/\">夺目</a> 产品的开发中，对 WebStorage 和 IndexedDB 使用的一些经验。</p>\n<h1 id=\"webstorage-存储空间限制\" style=\"position:relative;\"><a href=\"#webstorage-%E5%AD%98%E5%82%A8%E7%A9%BA%E9%97%B4%E9%99%90%E5%88%B6\" aria-label=\"webstorage 存储空间限制 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>WebStorage 存储空间限制</h1>\n<p>首先，存储分为两种：</p>\n<ol>\n<li>临时存储 (Temporary Storage)，默认类型，之后可能会被浏览器删除。</li>\n<li>持久存储 (Persistent Storage)，不会被浏览器自动删除，可以使用 <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/StorageManager/persist\">StorageManager::persist()</a> 方法将<strong>此域名</strong>的存储类型转为持久型，此时浏览器会弹出弹窗征求用户许可，用户也可以选择拒绝。</li>\n</ol>\n<p>根据 <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API/Browser_storage_limits_and_eviction_criteria#Storage_limits\">MDN 的文档</a>，浏览器分配给数据存储的磁盘空间大小是动态的，会根据磁盘剩余空间决定，同时对于一个具体域名下的空间分配也有一定策略。</p>\n<p>Firefox 的策略为：</p>\n<ol>\n<li>全局限制 (Global Limit)，50% 剩余磁盘空间</li>\n<li>域名组限制，大约是 20% 的全局限制量。例如 <code>mozilla.org</code>/<code>joe.blogs.mozilla.org</code>/<code>firefox.com</code> 被认为是同一个域名组，共享一个组限制。</li>\n</ol>\n<p>当磁盘空间告罄，quota manager 会开始删除临时存储 (temporary storage)，以<strong>域名</strong>为单位删除，直到觉得磁盘空间余量尚足。</p>\n<p>删除顺序遵循 LRU 原则，最后访问时间距离现在最远的域名下的 object store 会被整个删除。</p>\n<p>目前 chrome (79) 的策略细节可能不太一样，但还没有找到具体文档描述。</p>\n<h2 id=\"查询当前存储空间状况\" style=\"position:relative;\"><a href=\"#%E6%9F%A5%E8%AF%A2%E5%BD%93%E5%89%8D%E5%AD%98%E5%82%A8%E7%A9%BA%E9%97%B4%E7%8A%B6%E5%86%B5\" aria-label=\"查询当前存储空间状况 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>查询当前存储空间状况</h2>\n<p>使用 <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/StorageManager/estimate\">StorageManager::estimate()</a> 方法查询当前存储空间的配额 (quota) 和已使用量 (usage)。</p>\n<p>详细描述在 <a href=\"https://storage.spec.whatwg.org/\">Stroage 草案</a> 中可查。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">navigator<span class=\"token punctuation\">.</span>storage<span class=\"token punctuation\">.</span><span class=\"token function\">estimate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">estimate</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"percent\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span>\n      <span class=\"token punctuation\">(</span>estimate<span class=\"token punctuation\">.</span>usage <span class=\"token operator\">/</span> estimate<span class=\"token punctuation\">.</span>quota <span class=\"token operator\">*</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toFixed</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>额外一说，在 Chrome 中返回的 estimate 还会多出一个非标准字段 <code>usageDetails</code>，能看到更详细的信息。</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\">  <span class=\"token property\">\"usageDetails\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"caches\"</span><span class=\"token operator\">:</span> <span class=\"token number\">197632</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"indexedDB\"</span><span class=\"token operator\">:</span> <span class=\"token number\">187255711</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"serviceWorkerRegistrations\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1561632</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<h1 id=\"实际使用时，一些技术选择考量\" style=\"position:relative;\"><a href=\"#%E5%AE%9E%E9%99%85%E4%BD%BF%E7%94%A8%E6%97%B6%EF%BC%8C%E4%B8%80%E4%BA%9B%E6%8A%80%E6%9C%AF%E9%80%89%E6%8B%A9%E8%80%83%E9%87%8F\" aria-label=\"实际使用时，一些技术选择考量 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>实际使用时，一些技术选择考量</h1>\n<h2 id=\"存储大文件和数据块\" style=\"position:relative;\"><a href=\"#%E5%AD%98%E5%82%A8%E5%A4%A7%E6%96%87%E4%BB%B6%E5%92%8C%E6%95%B0%E6%8D%AE%E5%9D%97\" aria-label=\"存储大文件和数据块 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>存储大文件和数据块</h2>\n<p>IndexedDB 在 WebApp 中可以担任数据持久层，比起更早的基于字符串的 LocalStorage ，可以存储更复杂、更多样化和更大的数据。以下是一些常见的场景：</p>\n<ul>\n<li>ArrayBuffer/Uint8Array/Float32Array 存储等二进制数据和视图对象，用作密集计算</li>\n<li>ImageData 在基于 canvas 的绘图程序或游戏中做绘制结果缓存</li>\n<li>File/Blob 文件分片上传，大文件存储</li>\n</ul>\n<h2 id=\"blob-与常用二进制数据类型互转\" style=\"position:relative;\"><a href=\"#blob-%E4%B8%8E%E5%B8%B8%E7%94%A8%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%BA%92%E8%BD%AC\" aria-label=\"blob 与常用二进制数据类型互转 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Blob 与常用二进制数据类型互转</h2>\n<p>如果文件很大，建议使用 File/Blob，目前在 mac chrome 79 上测试，保存包含 ArrayBuffer 的单条记录超过 100MB，便会写入失败。</p>\n<p>使用 Blob（或者基于它的 File 对象） 还有许多好处，如果应用的主要功能是音视频相关处理，使用 <code>URL.createObjectURL(blob)</code> 生成的字符串最后能直接作为原生 DOM 的 img/video/audio 标签接受的 src。而且 <code>blob.type</code> 是有意义的 MIME Type，在调试数据的时候也有更多的信息。因此 Blob 很适合作为处理后可以直接展示的成品存储。</p>\n<p>但若数据需要被修改和操作，Blob 需要转化为 ArrayBuffer 以及具体的类型数据视图 Uint8Array 等使用。</p>\n<h3 id=\"blob---arraybuffer\" style=\"position:relative;\"><a href=\"#blob---arraybuffer\" aria-label=\"blob   arraybuffer permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Blob -> ArrayBuffer</h3>\n<p>以下两种方法，都为异步过程</p>\n<p>1 使用 <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Blob/arrayBuffer\">blob.arrayBuffer()</a> 方法。此方法为标准的推荐，不过目前浏览器支持有限。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> arrayBuffer <span class=\"token operator\">=</span> awiat blob<span class=\"token punctuation\">.</span><span class=\"token function\">arrayBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>2 使用 <code>FileReader</code></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> arrayBuffer\n<span class=\"token keyword\">const</span> fr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FileReader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nfr<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onload</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  arrayBuffer <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value\n<span class=\"token punctuation\">}</span>\nfr<span class=\"token punctuation\">.</span><span class=\"token function\">readAsArrayBuffer</span><span class=\"token punctuation\">(</span>blob<span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"arraybuffer---blob\" style=\"position:relative;\"><a href=\"#arraybuffer---blob\" aria-label=\"arraybuffer   blob permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ArrayBuffer -> Blob</h3>\n<p>同步过程</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> blob <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Blob</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>arrayBuffer<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> type<span class=\"token operator\">:</span> <span class=\"token string\">'video/mp4'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h1 id=\"参考\" style=\"position:relative;\"><a href=\"#%E5%8F%82%E8%80%83\" aria-label=\"参考 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>参考</h1>\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API/Browser_storage_limits_and_eviction_criteria\">https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API/Browser_storage_limits_and_eviction_criteria</a></p>\n<p><a href=\"https://developers.google.com/web/updates/2016/06/persistent-storage\">https://developers.google.com/web/updates/2016/06/persistent-storage</a></p>\n<p><a href=\"https://developer.chrome.com/apps/offline_storage\">https://developer.chrome.com/apps/offline_storage</a></p>\n<p><a href=\"https://stackoverflow.com/questions/17809824/how-to-use-navigator-instead-of-window-webkitstorageinfo-html5-file-system-api\">https://stackoverflow.com/questions/17809824/how-to-use-navigator-instead-of-window-webkitstorageinfo-html5-file-system-api</a></p>","excerpt":"以下列出在 夺目 产品的开发中，对 WebStorage 和 IndexedDB 使用的一些经验。 WebStorage 存储空间限制 首先，存储分为两种： 临时存储 (Temporary Storage)，默认类型，之后可能会被浏览器删除。 持久存储 (Persistent…","tableOfContents":"<ul>\n<li>\n<p><a href=\"/2019-12-11-Browser-Storage-Limit/#webstorage-%E5%AD%98%E5%82%A8%E7%A9%BA%E9%97%B4%E9%99%90%E5%88%B6\">WebStorage 存储空间限制</a></p>\n<ul>\n<li><a href=\"/2019-12-11-Browser-Storage-Limit/#%E6%9F%A5%E8%AF%A2%E5%BD%93%E5%89%8D%E5%AD%98%E5%82%A8%E7%A9%BA%E9%97%B4%E7%8A%B6%E5%86%B5\">查询当前存储空间状况</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/2019-12-11-Browser-Storage-Limit/#%E5%AE%9E%E9%99%85%E4%BD%BF%E7%94%A8%E6%97%B6%EF%BC%8C%E4%B8%80%E4%BA%9B%E6%8A%80%E6%9C%AF%E9%80%89%E6%8B%A9%E8%80%83%E9%87%8F\">实际使用时，一些技术选择考量</a></p>\n<ul>\n<li><a href=\"/2019-12-11-Browser-Storage-Limit/#%E5%AD%98%E5%82%A8%E5%A4%A7%E6%96%87%E4%BB%B6%E5%92%8C%E6%95%B0%E6%8D%AE%E5%9D%97\">存储大文件和数据块</a></li>\n<li>\n<p><a href=\"/2019-12-11-Browser-Storage-Limit/#blob-%E4%B8%8E%E5%B8%B8%E7%94%A8%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%BA%92%E8%BD%AC\">Blob 与常用二进制数据类型互转</a></p>\n<ul>\n<li><a href=\"/2019-12-11-Browser-Storage-Limit/#blob---arraybuffer\">Blob -> ArrayBuffer</a></li>\n<li><a href=\"/2019-12-11-Browser-Storage-Limit/#arraybuffer---blob\">ArrayBuffer -> Blob</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"/2019-12-11-Browser-Storage-Limit/#%E5%8F%82%E8%80%83\">参考</a></li>\n</ul>","fields":{"slug":"/2019-12-11-Browser-Storage-Limit/","featureImageSrc":null},"frontmatter":{"title":"浏览器 IndexedDB 存储限制","date":"2019-12-11","author":null,"tags":["IndexedDB","WebStorage","Browser"],"use_toc":true,"coverImage":null}}},"pageContext":{"type":"posts","next":{"fields":{"slug":"/2019-09-24-Compile-Skia-Canvaskit-WASM/"},"frontmatter":{"title":"编译 Skia canvaskit.wasm","tags":["Skia","WebAssembly"]},"fileAbsolutePath":"/Users/bytedance/mydemos/gatsby-hello-friend/content/posts/2019-09-24-Compile-Skia-Canvaskit-WASM.md"},"previous":{"fields":{"slug":"/2020-02-05-Awesome-UltiSnips/"},"frontmatter":{"title":"Awesome UltiSnips","tags":["Vim","UltiSnips"]},"fileAbsolutePath":"/Users/bytedance/mydemos/gatsby-hello-friend/content/posts/2020-02-05-Awesome-UltiSnips.md"},"slug":"/2019-12-11-Browser-Storage-Limit/"}},"staticQueryHashes":["1425477374","3128451518"]}