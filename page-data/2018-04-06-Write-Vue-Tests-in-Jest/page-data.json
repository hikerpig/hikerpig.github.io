{"componentChunkName":"component---src-templates-page-js","path":"/2018-04-06-Write-Vue-Tests-in-Jest/","result":{"data":{"site":{"siteMetadata":{"title":"HP goes FE","author":"@hikerpig"}},"markdownRemark":{"id":"a5683dcc-2168-50d7-8ee6-95f426b9a2cf","html":"<p>为一个基于 Vue 的项目搭建测试框架，有两个比较成熟的选择，Mocha + Webpack + Karma，或是 Jest。</p>\n<p>前者也是 vue-cli 默认脚手架里的测试方案，我们之前的项目也用了它，实际使用起来，感觉成也 Karma，败也 Karma，配置起来不是很顺手，导致测试必须在完整打包后才能进行，测试时间随着用例增加飞速增长。而且调试单个测试用例的时候冷启动时间太长。</p>\n<p>最后采用了功能强大的 Jest。</p>\n<h2 id=\"写测试\" style=\"position:relative;\"><a href=\"#%E5%86%99%E6%B5%8B%E8%AF%95\" aria-label=\"写测试 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>写测试</h2>\n<h3 id=\"测试-vue-组件\" style=\"position:relative;\"><a href=\"#%E6%B5%8B%E8%AF%95-vue-%E7%BB%84%E4%BB%B6\" aria-label=\"测试 vue 组件 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>测试 Vue 组件</h3>\n<p>参见 Vue Cookbook 中关于<a href=\"https://vuejs.org/v2/cookbook/unit-testing-vue-components.html\">单元测试</a>的一章，以及 <a href=\"https://vue-test-utils.vuejs.org/en/\">vue test-utils 的文档</a> 。</p>\n<h3 id=\"拦截网络请求\" style=\"position:relative;\"><a href=\"#%E6%8B%A6%E6%88%AA%E7%BD%91%E7%BB%9C%E8%AF%B7%E6%B1%82\" aria-label=\"拦截网络请求 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>拦截网络请求</h3>\n<p>由于目前请求都通过 axios，可以简单地通过对 axios 对象的劫持来实现这一需求，考虑 <a href=\"https://github.com/ctimmerm/axios-mock-adapter\">axios-mock-adapter</a> 插件。</p>\n<h3 id=\"拦截定时器\" style=\"position:relative;\"><a href=\"#%E6%8B%A6%E6%88%AA%E5%AE%9A%E6%97%B6%E5%99%A8\" aria-label=\"拦截定时器 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>拦截定时器</h3>\n<p>看Jest 文档的 <a href=\"https://facebook.github.io/jest/docs/en/timer-mocks.html\">Timer Mocks</a> 一章。</p>\n<h3 id=\"自定义-mock\" style=\"position:relative;\"><a href=\"#%E8%87%AA%E5%AE%9A%E4%B9%89-mock\" aria-label=\"自定义 mock permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>自定义 Mock</h3>\n<p>采用 Jest 一方面是因为它具有很方便的 Mock 方案，框架会自动探测 <code>__mocks__</code> 文件夹中的文件，例如如果新建 <code>__mocks__/axios.js</code>，测试中所有源码的 <code>require('axios')</code> 返回的对象都会是该文件的导出内容。详见文档中的 <a href=\"https://facebook.github.io/jest/docs/en/manual-mocks.html\">Manual Mocks</a> 一章。</p>\n<h2 id=\"调试测试\" style=\"position:relative;\"><a href=\"#%E8%B0%83%E8%AF%95%E6%B5%8B%E8%AF%95\" aria-label=\"调试测试 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>调试测试</h2>\n<p>以在 VSCode 中 Debug 的配置为例，以下为 <code>.vscode/launch.json</code> 示例，参考文章<a href=\"https://segmentfault.com/a/1190000011852541\">《在VS Code中调试Jest单元测试》</a>：</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0.2.0\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"configurations\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"node\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"request\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"launch\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Debug Current Jest Test\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"program\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"${workspaceRoot}/node_modules/jest/bin/jest\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"cwd\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"${workspaceRoot}\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"env\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"NODE_ENV\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"test\"</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"args\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"--runInBand\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"--env=jsdom\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"${fileBasename}\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"runtimeArgs\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">\"--inspect-brk\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"sourceMaps\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"console\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"integratedTerminal\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"internalConsoleOptions\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"neverOpen\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"node\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"request\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"attach\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"stopOnEntry\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Attach to node inspect-brk\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"port\"</span><span class=\"token operator\">:</span> <span class=\"token number\">9229</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"使用-vscode-启动测试\" style=\"position:relative;\"><a href=\"#%E4%BD%BF%E7%94%A8-vscode-%E5%90%AF%E5%8A%A8%E6%B5%8B%E8%AF%95\" aria-label=\"使用 vscode 启动测试 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>使用 VSCode 启动测试</h3>\n<p>args 中的 <code>--runInBand</code> 和 <code>--env=jsdom</code> 都是 Jest 的配置项，详细的可查阅 <a href=\"https://facebook.github.io/jest/docs/en/cli.html\">jest cli 文档</a></p>\n<p><code>${fileBasename}</code> 为 VSCode 配置提供的变量，在此处表明只让 Jest 运行当前打开文件描述的用例。</p>\n<h3 id=\"通过调试协议连接进程\" style=\"position:relative;\"><a href=\"#%E9%80%9A%E8%BF%87%E8%B0%83%E8%AF%95%E5%8D%8F%E8%AE%AE%E8%BF%9E%E6%8E%A5%E8%BF%9B%E7%A8%8B\" aria-label=\"通过调试协议连接进程 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>通过调试协议连接进程</h3>\n<p>可以不通过 VSCode，而是直接使用命令 <code>node --inspect=9229 --inspect-brk ./node_modules/.bin/jest --runInBand</code> 运行 jest，</p>\n<p>第二个配置(request 为 'attach')，连接一个开放 9229 为调试端口的已经在运行的 node 进程。</p>\n<p>此种方式可选择其他实现了远程调试协议的IDE（例如 Webstorm）或浏览器（例如 <a href=\"https://zhuanlan.zhihu.com/p/30264842\">chrome://inspect</a> ）来实现断点调试等功能。</p>\n<p>关于 Inspector 协议可看<a href=\"https://zhuanlan.zhihu.com/p/30264842\">此文章</a>。</p>","excerpt":"为一个基于 Vue 的项目搭建测试框架，有两个比较成熟的选择，Mocha + Webpack + Karma，或是 Jest。 前者也是 vue-cli 默认脚手架里的测试方案，我们之前的项目也用了它，实际使用起来，感觉成也 Karma，败也 Karma…","tableOfContents":"<ul>\n<li>\n<p><a href=\"/2018-04-06-Write-Vue-Tests-in-Jest/#%E5%86%99%E6%B5%8B%E8%AF%95\">写测试</a></p>\n<ul>\n<li><a href=\"/2018-04-06-Write-Vue-Tests-in-Jest/#%E6%B5%8B%E8%AF%95-vue-%E7%BB%84%E4%BB%B6\">测试 Vue 组件</a></li>\n<li><a href=\"/2018-04-06-Write-Vue-Tests-in-Jest/#%E6%8B%A6%E6%88%AA%E7%BD%91%E7%BB%9C%E8%AF%B7%E6%B1%82\">拦截网络请求</a></li>\n<li><a href=\"/2018-04-06-Write-Vue-Tests-in-Jest/#%E6%8B%A6%E6%88%AA%E5%AE%9A%E6%97%B6%E5%99%A8\">拦截定时器</a></li>\n<li><a href=\"/2018-04-06-Write-Vue-Tests-in-Jest/#%E8%87%AA%E5%AE%9A%E4%B9%89-mock\">自定义 Mock</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/2018-04-06-Write-Vue-Tests-in-Jest/#%E8%B0%83%E8%AF%95%E6%B5%8B%E8%AF%95\">调试测试</a></p>\n<ul>\n<li><a href=\"/2018-04-06-Write-Vue-Tests-in-Jest/#%E4%BD%BF%E7%94%A8-vscode-%E5%90%AF%E5%8A%A8%E6%B5%8B%E8%AF%95\">使用 VSCode 启动测试</a></li>\n<li><a href=\"/2018-04-06-Write-Vue-Tests-in-Jest/#%E9%80%9A%E8%BF%87%E8%B0%83%E8%AF%95%E5%8D%8F%E8%AE%AE%E8%BF%9E%E6%8E%A5%E8%BF%9B%E7%A8%8B\">通过调试协议连接进程</a></li>\n</ul>\n</li>\n</ul>","fields":{"slug":"/2018-04-06-Write-Vue-Tests-in-Jest/","featureImageSrc":null},"frontmatter":{"title":"用 Jest 单元测试基于 Vue 的项目","date":"2018-04-06","author":null,"tags":["Test","Vue"],"use_toc":true,"coverImage":null}}},"pageContext":{"type":"posts","next":{"fields":{"slug":"/2018-04-02-Customize-Error-in-Typescript/"},"frontmatter":{"title":"在 Typescript 中继承 Error 对象","tags":["Typescript","Javascript"]},"fileAbsolutePath":"/Users/bytedance/mydemos/gatsby-hello-friend/content/posts/2018-04-02-Customize-Error-in-Typescript.md"},"previous":{"fields":{"slug":"/2018-05-03-Try-Rust-Webassemly/"},"frontmatter":{"title":"Try Rust WebAssembly","tags":["WebAssembly","Rust"]},"fileAbsolutePath":"/Users/bytedance/mydemos/gatsby-hello-friend/content/posts/2018-05-03-Try-Rust-Webassemly.md"},"slug":"/2018-04-06-Write-Vue-Tests-in-Jest/"}},"staticQueryHashes":["1425477374","3128451518"]}